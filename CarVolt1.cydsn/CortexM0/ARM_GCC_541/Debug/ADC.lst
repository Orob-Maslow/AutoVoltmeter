ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_Init, %function
  25              	ADC_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.60
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 2


  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u, 0x00000400u, 0x00000400u, 0x000004
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:Generated_Source\PSoC4/ADC.c **** }
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 3


  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 4


 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 0E20     		movs	r0, #14
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  41              		.loc 1 173 0
  42 000a 4449     		ldr	r1, .L12
  43 000c 0E20     		movs	r0, #14
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0F22     		movs	r2, #15
  48 0014 424B     		ldr	r3, .L12+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 5


 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 424B     		ldr	r3, .L12+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L10
  56 0020 4149     		ldr	r1, .L12+12
  57 0022 00E0     		b	.L2
  58              	.L10:
  59 0024 4149     		ldr	r1, .L12+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 424A     		ldr	r2, .L12+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 414A     		ldr	r2, .L12+24
  68 0030 414B     		ldr	r3, .L12+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 414A     		ldr	r2, .L12+32
  72 0036 424B     		ldr	r3, .L12+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 414A     		ldr	r2, .L12+40
  77 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 4
  79 0040 414A     		ldr	r2, .L12+44
  80 0042 4249     		ldr	r1, .L12+48
  81 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 4
  83 0046 4249     		ldr	r1, .L12+52
  84 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  85              		.loc 1 190 0 discriminator 4
  86 004a 424A     		ldr	r2, .L12+56
  87 004c 1168     		ldr	r1, [r2]
  88 004e 8020     		movs	r0, #128
  89 0050 4002     		lsls	r0, r0, #9
  90 0052 0143     		orrs	r1, r0
  91 0054 1160     		str	r1, [r2]
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 6


 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
  92              		.loc 1 193 0 discriminator 4
  93 0056 4049     		ldr	r1, .L12+60
  94 0058 0A68     		ldr	r2, [r1]
  95 005a 0243     		orrs	r2, r0
  96 005c 0A60     		str	r2, [r1]
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  97              		.loc 1 197 0 discriminator 4
  98 005e 3F4A     		ldr	r2, .L12+64
  99 0060 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 100              		.loc 1 198 0 discriminator 4
 101 0062 3F4A     		ldr	r2, .L12+68
 102 0064 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 103              		.loc 1 199 0 discriminator 4
 104 0066 0133     		adds	r3, r3, #1
 105 0068 3E4A     		ldr	r2, .L12+72
 106 006a 1360     		str	r3, [r2]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 107              		.loc 1 202 0 discriminator 4
 108 006c 0221     		movs	r1, #2
 109 006e 3E4A     		ldr	r2, .L12+76
 110 0070 1160     		str	r1, [r2]
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 111              		.loc 1 206 0 discriminator 4
 112 0072 3E49     		ldr	r1, .L12+80
 113 0074 0868     		ldr	r0, [r1]
 114              	.LVL2:
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 115              		.loc 1 207 0 discriminator 4
 116 0076 3E4A     		ldr	r2, .L12+84
 117 0078 0240     		ands	r2, r0
 118              	.LVL3:
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 119              		.loc 1 213 0 discriminator 4
 120 007a 1343     		orrs	r3, r2
 121              	.LVL4:
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 7


 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 122              		.loc 1 226 0 discriminator 4
 123 007c 0B60     		str	r3, [r1]
 124              	.LVL5:
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 125              		.loc 1 232 0 discriminator 4
 126 007e 0022     		movs	r2, #0
 127 0080 48E0     		b	.L3
 128              	.LVL6:
 129              	.L9:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 130              		.loc 1 234 0
 131 0082 3C48     		ldr	r0, .L12+88
 132 0084 9100     		lsls	r1, r2, #2
 133 0086 0C58     		ldr	r4, [r1, r0]
 134 0088 DC23     		movs	r3, #220
 135 008a 9B01     		lsls	r3, r3, #6
 136 008c 2340     		ands	r3, r4
 137              	.LVL7:
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 138              		.loc 1 236 0
 139 008e 8018     		adds	r0, r0, r2
 140 0090 007C     		ldrb	r0, [r0, #16]
 141 0092 0343     		orrs	r3, r0
 142              	.LVL8:
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 143              		.loc 1 253 0
 144 0094 3848     		ldr	r0, .L12+92
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 8


 145 0096 8446     		mov	ip, r0
 146 0098 6144     		add	r1, r1, ip
 147 009a 0B60     		str	r3, [r1]
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 148              		.loc 1 255 0
 149 009c E307     		lsls	r3, r4, #31
 150 009e 07D5     		bpl	.L4
 151              	.LVL9:
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 152              		.loc 1 257 0
 153 00a0 2E48     		ldr	r0, .L12+64
 154 00a2 0168     		ldr	r1, [r0]
 155              	.LVL10:
 156 00a4 0123     		movs	r3, #1
 157 00a6 9340     		lsls	r3, r3, r2
 158 00a8 1B04     		lsls	r3, r3, #16
 159 00aa 1B0C     		lsrs	r3, r3, #16
 160 00ac 0B43     		orrs	r3, r1
 161 00ae 0360     		str	r3, [r0]
 162              	.LVL11:
 163              	.L4:
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 164              		.loc 1 260 0
 165 00b0 9300     		lsls	r3, r2, #2
 166 00b2 3049     		ldr	r1, .L12+88
 167              	.LVL12:
 168 00b4 5B58     		ldr	r3, [r3, r1]
 169 00b6 9B07     		lsls	r3, r3, #30
 170 00b8 07D5     		bpl	.L5
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 171              		.loc 1 262 0
 172 00ba 2948     		ldr	r0, .L12+68
 173 00bc 0168     		ldr	r1, [r0]
 174              	.LVL13:
 175 00be 0123     		movs	r3, #1
 176 00c0 9340     		lsls	r3, r3, r2
 177 00c2 1B04     		lsls	r3, r3, #16
 178 00c4 1B0C     		lsrs	r3, r3, #16
 179 00c6 0B43     		orrs	r3, r1
 180 00c8 0360     		str	r3, [r0]
 181              	.L5:
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 9


 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 182              		.loc 1 282 0
 183 00ca 9300     		lsls	r3, r2, #2
 184 00cc 2949     		ldr	r1, .L12+88
 185              	.LVL14:
 186 00ce 5958     		ldr	r1, [r3, r1]
 187              	.LVL15:
 188 00d0 8B05     		lsls	r3, r1, #22
 189 00d2 02D5     		bpl	.L11
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 190              		.loc 1 284 0
 191 00d4 8020     		movs	r0, #128
 192 00d6 4000     		lsls	r0, r0, #1
 193 00d8 01E0     		b	.L6
 194              	.L11:
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 195              		.loc 1 288 0
 196 00da 8020     		movs	r0, #128
 197 00dc 4001     		lsls	r0, r0, #5
 198              	.L6:
 199              	.LVL16:
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 200              		.loc 1 291 0
 201 00de CB05     		lsls	r3, r1, #23
 202 00e0 04D4     		bmi	.L7
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 203              		.loc 1 298 0
 204 00e2 5300     		lsls	r3, r2, #1
 205 00e4 0024     		movs	r4, #0
 206              	.LVL17:
 207 00e6 2549     		ldr	r1, .L12+96
 208 00e8 5C52     		strh	r4, [r3, r1]
 209 00ea 03E0     		b	.L8
 210              	.LVL18:
 211              	.L7:
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 10


 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 212              		.loc 1 307 0
 213 00ec 5300     		lsls	r3, r2, #1
 214 00ee 0024     		movs	r4, #0
 215              	.LVL19:
 216 00f0 2249     		ldr	r1, .L12+96
 217 00f2 5C52     		strh	r4, [r3, r1]
 218              	.L8:
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 219              		.loc 1 311 0 discriminator 2
 220 00f4 224B     		ldr	r3, .L12+100
 221 00f6 4343     		muls	r3, r0
 222 00f8 8021     		movs	r1, #128
 223 00fa C900     		lsls	r1, r1, #3
 224 00fc 8C46     		mov	ip, r1
 225 00fe 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 226              		.loc 1 312 0 discriminator 2
 227 0100 D917     		asrs	r1, r3, #31
 228 0102 4905     		lsls	r1, r1, #21
 229 0104 490D     		lsrs	r1, r1, #21
 230 0106 CB18     		adds	r3, r1, r3
 231 0108 DB12     		asrs	r3, r3, #11
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 232              		.loc 1 311 0 discriminator 2
 233 010a 1BB2     		sxth	r3, r3
 234 010c 9000     		lsls	r0, r2, #2
 235              	.LVL20:
 236 010e 1D49     		ldr	r1, .L12+104
 237 0110 4350     		str	r3, [r0, r1]
 232:Generated_Source\PSoC4/ADC.c ****     {
 238              		.loc 1 232 0 discriminator 2
 239 0112 0132     		adds	r2, r2, #1
 240              	.LVL21:
 241              	.L3:
 232:Generated_Source\PSoC4/ADC.c ****     {
 242              		.loc 1 232 0 is_stmt 0 discriminator 1
 243 0114 032A     		cmp	r2, #3
 244 0116 B4D9     		bls	.L9
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 245              		.loc 1 314 0 is_stmt 1
 246              		@ sp needed
 247 0118 10BD     		pop	{r4, pc}
 248              	.L13:
 249 011a C046     		.align	2
 250              	.L12:
 251 011c 00000000 		.word	ADC_ISR
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 11


 252 0120 20001A40 		.word	1075445792
 253 0124 80031A40 		.word	1075446656
 254 0128 C0201011 		.word	286269632
 255 012c C0200011 		.word	285221056
 256 0130 00001A40 		.word	1075445760
 257 0134 8C000080 		.word	-2147483508
 258 0138 04001A40 		.word	1075445764
 259 013c 0000FF07 		.word	134152192
 260 0140 18001A40 		.word	1075445784
 261 0144 1C001A40 		.word	1075445788
 262 0148 04000400 		.word	262148
 263 014c 10001A40 		.word	1075445776
 264 0150 14001A40 		.word	1075445780
 265 0154 00031A40 		.word	1075446528
 266 0158 40031A40 		.word	1075446592
 267 015c 28021A40 		.word	1075446312
 268 0160 38021A40 		.word	1075446328
 269 0164 18021A40 		.word	1075446296
 270 0168 000F1A40 		.word	1075449600
 271 016c 30001A40 		.word	1075445808
 272 0170 FFFFFFDF 		.word	-536870913
 273 0174 00000000 		.word	.LANCHOR0
 274 0178 80001A40 		.word	1075445888
 275 017c 00000000 		.word	ADC_offset
 276 0180 10270000 		.word	10000
 277 0184 00000000 		.word	ADC_countsPer10Volt
 278              		.cfi_endproc
 279              	.LFE1:
 280              		.size	ADC_Init, .-ADC_Init
 281              		.section	.text.ADC_Enable,"ax",%progbits
 282              		.align	2
 283              		.global	ADC_Enable
 284              		.code	16
 285              		.thumb_func
 286              		.type	ADC_Enable, %function
 287              	ADC_Enable:
 288              	.LFB2:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 289              		.loc 1 331 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 12


 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 10B5     		push	{r4, lr}
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 4, -8
 296              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 297              		.loc 1 332 0
 298 0002 074B     		ldr	r3, .L16
 299 0004 1B68     		ldr	r3, [r3]
 300 0006 002B     		cmp	r3, #0
 301 0008 08DB     		blt	.L14
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 302              		.loc 1 342 0
 303 000a 054A     		ldr	r2, .L16
 304 000c 1368     		ldr	r3, [r2]
 305 000e 8021     		movs	r1, #128
 306 0010 0906     		lsls	r1, r1, #24
 307 0012 0B43     		orrs	r3, r1
 308 0014 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 309              		.loc 1 345 0
 310 0016 0A20     		movs	r0, #10
 311 0018 FFF7FEFF 		bl	CyDelayUs
 312              	.LVL22:
 313              	.L14:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 314              		.loc 1 347 0
 315              		@ sp needed
 316 001c 10BD     		pop	{r4, pc}
 317              	.L17:
 318 001e C046     		.align	2
 319              	.L16:
 320 0020 00001A40 		.word	1075445760
 321              		.cfi_endproc
 322              	.LFE2:
 323              		.size	ADC_Enable, .-ADC_Enable
 324              		.section	.text.ADC_Start,"ax",%progbits
 325              		.align	2
 326              		.global	ADC_Start
 327              		.code	16
 328              		.thumb_func
 329              		.type	ADC_Start, %function
 330              	ADC_Start:
 331              	.LFB0:
  64:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 13


 332              		.loc 1 64 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336 0000 10B5     		push	{r4, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 4, -8
 339              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC.c ****     {
 340              		.loc 1 66 0
 341 0002 064B     		ldr	r3, .L20
 342 0004 1B78     		ldrb	r3, [r3]
 343 0006 002B     		cmp	r3, #0
 344 0008 04D1     		bne	.L19
  68:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 345              		.loc 1 68 0
 346 000a FFF7FEFF 		bl	ADC_Init
 347              	.LVL23:
  69:Generated_Source\PSoC4/ADC.c ****     }
 348              		.loc 1 69 0
 349 000e 0122     		movs	r2, #1
 350 0010 024B     		ldr	r3, .L20
 351 0012 1A70     		strb	r2, [r3]
 352              	.L19:
  71:Generated_Source\PSoC4/ADC.c **** }
 353              		.loc 1 71 0
 354 0014 FFF7FEFF 		bl	ADC_Enable
 355              	.LVL24:
  72:Generated_Source\PSoC4/ADC.c **** 
 356              		.loc 1 72 0
 357              		@ sp needed
 358 0018 10BD     		pop	{r4, pc}
 359              	.L21:
 360 001a C046     		.align	2
 361              	.L20:
 362 001c 00000000 		.word	.LANCHOR1
 363              		.cfi_endproc
 364              	.LFE0:
 365              		.size	ADC_Start, .-ADC_Start
 366              		.section	.text.ADC_Stop,"ax",%progbits
 367              		.align	2
 368              		.global	ADC_Stop
 369              		.code	16
 370              		.thumb_func
 371              		.type	ADC_Stop, %function
 372              	ADC_Stop:
 373              	.LFB3:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 14


 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 374              		.loc 1 366 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 379              		.loc 1 367 0
 380 0000 024A     		ldr	r2, .L23
 381 0002 1368     		ldr	r3, [r2]
 382 0004 5B00     		lsls	r3, r3, #1
 383 0006 5B08     		lsrs	r3, r3, #1
 384 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC.c **** }
 385              		.loc 1 368 0
 386              		@ sp needed
 387 000a 7047     		bx	lr
 388              	.L24:
 389              		.align	2
 390              	.L23:
 391 000c 00001A40 		.word	1075445760
 392              		.cfi_endproc
 393              	.LFE3:
 394              		.size	ADC_Stop, .-ADC_Stop
 395              		.section	.text.ADC_StartConvert,"ax",%progbits
 396              		.align	2
 397              		.global	ADC_StartConvert
 398              		.code	16
 399              		.thumb_func
 400              		.type	ADC_StartConvert, %function
 401              	ADC_StartConvert:
 402              	.LFB4:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 15


 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 403              		.loc 1 392 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 408              		.loc 1 394 0
 409 0000 034A     		ldr	r2, .L26
 410 0002 1368     		ldr	r3, [r2]
 411 0004 8021     		movs	r1, #128
 412 0006 4902     		lsls	r1, r1, #9
 413 0008 0B43     		orrs	r3, r1
 414 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 415              		.loc 1 399 0
 416              		@ sp needed
 417 000c 7047     		bx	lr
 418              	.L27:
 419 000e C046     		.align	2
 420              	.L26:
 421 0010 04001A40 		.word	1075445764
 422              		.cfi_endproc
 423              	.LFE4:
 424              		.size	ADC_StartConvert, .-ADC_StartConvert
 425              		.section	.text.ADC_StopConvert,"ax",%progbits
 426              		.align	2
 427              		.global	ADC_StopConvert
 428              		.code	16
 429              		.thumb_func
 430              		.type	ADC_StopConvert, %function
 431              	ADC_StopConvert:
 432              	.LFB5:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 16


 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 433              		.loc 1 417 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 438              		.loc 1 419 0
 439 0000 024A     		ldr	r2, .L29
 440 0002 1168     		ldr	r1, [r2]
 441 0004 024B     		ldr	r3, .L29+4
 442 0006 0B40     		ands	r3, r1
 443 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 444              		.loc 1 421 0
 445              		@ sp needed
 446 000a 7047     		bx	lr
 447              	.L30:
 448              		.align	2
 449              	.L29:
 450 000c 04001A40 		.word	1075445764
 451 0010 FFFFFEFF 		.word	-65537
 452              		.cfi_endproc
 453              	.LFE5:
 454              		.size	ADC_StopConvert, .-ADC_StopConvert
 455              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 456              		.align	2
 457              		.global	ADC_IsEndConversion
 458              		.code	16
 459              		.thumb_func
 460              		.type	ADC_IsEndConversion, %function
 461              	ADC_IsEndConversion:
 462              	.LFB6:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 17


 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 463              		.loc 1 451 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468              	.LVL25:
 469 0000 0200     		movs	r2, r0
 470              	.LVL26:
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 471              		.loc 1 454 0
 472 0002 8307     		lsls	r3, r0, #30
 473 0004 0CD0     		beq	.L35
 474              	.LVL27:
 475              	.L34:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 476              		.loc 1 458 0 discriminator 2
 477 0006 074B     		ldr	r3, .L36
 478 0008 1B68     		ldr	r3, [r3]
 479 000a 0120     		movs	r0, #1
 480 000c 1840     		ands	r0, r3
 481              	.LVL28:
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 482              		.loc 1 459 0 discriminator 2
 483 000e 01D1     		bne	.L33
 484              		.loc 1 459 0 is_stmt 0 discriminator 1
 485 0010 9307     		lsls	r3, r2, #30
 486 0012 F8D4     		bmi	.L34
 487              	.L33:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 488              		.loc 1 461 0 is_stmt 1
 489 0014 0028     		cmp	r0, #0
 490 0016 04D0     		beq	.L32
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 491              		.loc 1 464 0
 492 0018 0122     		movs	r2, #1
 493              	.LVL29:
 494 001a 024B     		ldr	r3, .L36
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 18


 495 001c 1A60     		str	r2, [r3]
 496 001e 00E0     		b	.L32
 497              	.LVL30:
 498              	.L35:
 452:Generated_Source\PSoC4/ADC.c **** 
 499              		.loc 1 452 0
 500 0020 0020     		movs	r0, #0
 501              	.LVL31:
 502              	.L32:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 486:Generated_Source\PSoC4/ADC.c **** }
 503              		.loc 1 486 0
 504              		@ sp needed
 505 0022 7047     		bx	lr
 506              	.L37:
 507              		.align	2
 508              	.L36:
 509 0024 10021A40 		.word	1075446288
 510              		.cfi_endproc
 511              	.LFE6:
 512              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 513              		.section	.text.ADC_GetResult16,"ax",%progbits
 514              		.align	2
 515              		.global	ADC_GetResult16
 516              		.code	16
 517              		.thumb_func
 518              		.type	ADC_GetResult16, %function
 519              	ADC_GetResult16:
 520              	.LFB7:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 19


 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 521              		.loc 1 505 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              	.LVL32:
 526 0000 10B5     		push	{r4, lr}
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 4, -8
 529              		.cfi_offset 14, -4
 530 0002 0400     		movs	r4, r0
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 531              		.loc 1 509 0
 532 0004 0328     		cmp	r0, #3
 533 0006 02D9     		bls	.L39
 534              		.loc 1 509 0 is_stmt 0 discriminator 1
 535 0008 0020     		movs	r0, #0
 536              	.LVL33:
 537 000a FFF7FEFF 		bl	CyHalt
 538              	.LVL34:
 539              	.L39:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 540              		.loc 1 511 0 is_stmt 1
 541 000e 032C     		cmp	r4, #3
 542 0010 07D8     		bhi	.L41
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 543              		.loc 1 513 0
 544 0012 A400     		lsls	r4, r4, #2
 545              	.LVL35:
 546 0014 044B     		ldr	r3, .L42
 547 0016 9C46     		mov	ip, r3
 548 0018 6444     		add	r4, r4, ip
 549 001a 2068     		ldr	r0, [r4]
 550 001c 0004     		lsls	r0, r0, #16
 551 001e 000C     		lsrs	r0, r0, #16
 552              	.LVL36:
 553 0020 00E0     		b	.L40
 554              	.LVL37:
 555              	.L41:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 20


 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 556              		.loc 1 521 0
 557 0022 0020     		movs	r0, #0
 558              	.LVL38:
 559              	.L40:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 560              		.loc 1 525 0
 561 0024 00B2     		sxth	r0, r0
 562              	.LVL39:
 526:Generated_Source\PSoC4/ADC.c **** }
 563              		.loc 1 526 0
 564              		@ sp needed
 565 0026 10BD     		pop	{r4, pc}
 566              	.L43:
 567              		.align	2
 568              	.L42:
 569 0028 80011A40 		.word	1075446144
 570              		.cfi_endproc
 571              	.LFE7:
 572              		.size	ADC_GetResult16, .-ADC_GetResult16
 573              		.section	.text.ADC_SetChanMask,"ax",%progbits
 574              		.align	2
 575              		.global	ADC_SetChanMask
 576              		.code	16
 577              		.thumb_func
 578              		.type	ADC_SetChanMask, %function
 579              	ADC_SetChanMask:
 580              	.LFB8:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 21


 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 581              		.loc 1 550 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL40:
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 587              		.loc 1 551 0
 588 0000 0F23     		movs	r3, #15
 589 0002 1840     		ands	r0, r3
 590              	.LVL41:
 591 0004 014B     		ldr	r3, .L45
 592 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 593              		.loc 1 552 0
 594              		@ sp needed
 595 0008 7047     		bx	lr
 596              	.L46:
 597 000a C046     		.align	2
 598              	.L45:
 599 000c 20001A40 		.word	1075445792
 600              		.cfi_endproc
 601              	.LFE8:
 602              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 603              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 604              		.align	2
 605              		.global	ADC_SetLowLimit
 606              		.code	16
 607              		.thumb_func
 608              		.type	ADC_SetLowLimit, %function
 609              	ADC_SetLowLimit:
 610              	.LFB9:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 22


 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 611              		.loc 1 594 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616              	.LVL42:
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 617              		.loc 1 595 0
 618 0000 054A     		ldr	r2, .L48
 619 0002 1368     		ldr	r3, [r2]
 620 0004 1B0C     		lsrs	r3, r3, #16
 621 0006 1B04     		lsls	r3, r3, #16
 622 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 623              		.loc 1 596 0
 624 000a 1368     		ldr	r3, [r2]
 625 000c 0004     		lsls	r0, r0, #16
 626              	.LVL43:
 627 000e 000C     		lsrs	r0, r0, #16
 628 0010 1843     		orrs	r0, r3
 629 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC.c **** }
 630              		.loc 1 597 0
 631              		@ sp needed
 632 0014 7047     		bx	lr
 633              	.L49:
 634 0016 C046     		.align	2
 635              	.L48:
 636 0018 18001A40 		.word	1075445784
 637              		.cfi_endproc
 638              	.LFE9:
 639              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 640              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 641              		.align	2
 642              		.global	ADC_SetHighLimit
 643              		.code	16
 644              		.thumb_func
 645              		.type	ADC_SetHighLimit, %function
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 23


 646              	ADC_SetHighLimit:
 647              	.LFB10:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 648              		.loc 1 615 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 653              	.LVL44:
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 654              		.loc 1 616 0
 655 0000 044A     		ldr	r2, .L51
 656 0002 1368     		ldr	r3, [r2]
 657 0004 1B04     		lsls	r3, r3, #16
 658 0006 1B0C     		lsrs	r3, r3, #16
 659 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 660              		.loc 1 617 0
 661 000a 1368     		ldr	r3, [r2]
 662 000c 0004     		lsls	r0, r0, #16
 663              	.LVL45:
 664 000e 1843     		orrs	r0, r3
 665 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC.c **** }
 666              		.loc 1 618 0
 667              		@ sp needed
 668 0012 7047     		bx	lr
 669              	.L52:
 670              		.align	2
 671              	.L51:
 672 0014 18001A40 		.word	1075445784
 673              		.cfi_endproc
 674              	.LFE10:
 675              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 676              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 677              		.align	2
 678              		.global	ADC_SetLimitMask
 679              		.code	16
 680              		.thumb_func
 681              		.type	ADC_SetLimitMask, %function
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 24


 682              	ADC_SetLimitMask:
 683              	.LFB11:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 684              		.loc 1 639 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689              	.LVL46:
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 690              		.loc 1 640 0
 691 0000 0F23     		movs	r3, #15
 692 0002 1840     		ands	r0, r3
 693              	.LVL47:
 694 0004 014B     		ldr	r3, .L54
 695 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 696              		.loc 1 641 0
 697              		@ sp needed
 698 0008 7047     		bx	lr
 699              	.L55:
 700 000a C046     		.align	2
 701              	.L54:
 702 000c 38021A40 		.word	1075446328
 703              		.cfi_endproc
 704              	.LFE11:
 705              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 706              		.section	.text.ADC_SetSatMask,"ax",%progbits
 707              		.align	2
 708              		.global	ADC_SetSatMask
 709              		.code	16
 710              		.thumb_func
 711              		.type	ADC_SetSatMask, %function
 712              	ADC_SetSatMask:
 713              	.LFB12:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 25


 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 714              		.loc 1 662 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719              	.LVL48:
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 720              		.loc 1 663 0
 721 0000 0F23     		movs	r3, #15
 722 0002 1840     		ands	r0, r3
 723              	.LVL49:
 724 0004 014B     		ldr	r3, .L57
 725 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 726              		.loc 1 664 0
 727              		@ sp needed
 728 0008 7047     		bx	lr
 729              	.L58:
 730 000a C046     		.align	2
 731              	.L57:
 732 000c 28021A40 		.word	1075446312
 733              		.cfi_endproc
 734              	.LFE12:
 735              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 736              		.section	.text.ADC_SetOffset,"ax",%progbits
 737              		.align	2
 738              		.global	ADC_SetOffset
 739              		.code	16
 740              		.thumb_func
 741              		.type	ADC_SetOffset, %function
 742              	ADC_SetOffset:
 743              	.LFB13:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 26


 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 744              		.loc 1 690 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              	.LVL50:
 749 0000 70B5     		push	{r4, r5, r6, lr}
 750              		.cfi_def_cfa_offset 16
 751              		.cfi_offset 4, -16
 752              		.cfi_offset 5, -12
 753              		.cfi_offset 6, -8
 754              		.cfi_offset 14, -4
 755 0002 0400     		movs	r4, r0
 756 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 757              		.loc 1 692 0
 758 0006 0328     		cmp	r0, #3
 759 0008 02D9     		bls	.L60
 760              		.loc 1 692 0 is_stmt 0 discriminator 1
 761 000a 0020     		movs	r0, #0
 762              	.LVL51:
 763 000c FFF7FEFF 		bl	CyHalt
 764              	.LVL52:
 765              	.L60:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 766              		.loc 1 694 0 is_stmt 1
 767 0010 6400     		lsls	r4, r4, #1
 768              	.LVL53:
 769 0012 014B     		ldr	r3, .L61
 770 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 771              		.loc 1 695 0
 772              		@ sp needed
 773 0016 70BD     		pop	{r4, r5, r6, pc}
 774              	.L62:
 775              		.align	2
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 27


 776              	.L61:
 777 0018 00000000 		.word	ADC_offset
 778              		.cfi_endproc
 779              	.LFE13:
 780              		.size	ADC_SetOffset, .-ADC_SetOffset
 781              		.section	.text.ADC_SetGain,"ax",%progbits
 782              		.align	2
 783              		.global	ADC_SetGain
 784              		.code	16
 785              		.thumb_func
 786              		.type	ADC_SetGain, %function
 787              	ADC_SetGain:
 788              	.LFB14:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 789              		.loc 1 724 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              	.LVL54:
 794 0000 70B5     		push	{r4, r5, r6, lr}
 795              		.cfi_def_cfa_offset 16
 796              		.cfi_offset 4, -16
 797              		.cfi_offset 5, -12
 798              		.cfi_offset 6, -8
 799              		.cfi_offset 14, -4
 800 0002 0400     		movs	r4, r0
 801 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 28


 802              		.loc 1 726 0
 803 0006 0328     		cmp	r0, #3
 804 0008 02D9     		bls	.L64
 805              		.loc 1 726 0 is_stmt 0 discriminator 1
 806 000a 0020     		movs	r0, #0
 807              	.LVL55:
 808 000c FFF7FEFF 		bl	CyHalt
 809              	.LVL56:
 810              	.L64:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 811              		.loc 1 728 0 is_stmt 1
 812 0010 A400     		lsls	r4, r4, #2
 813              	.LVL57:
 814 0012 014B     		ldr	r3, .L65
 815 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 816              		.loc 1 729 0
 817              		@ sp needed
 818              	.LVL58:
 819 0016 70BD     		pop	{r4, r5, r6, pc}
 820              	.L66:
 821              		.align	2
 822              	.L65:
 823 0018 00000000 		.word	ADC_countsPer10Volt
 824              		.cfi_endproc
 825              	.LFE14:
 826              		.size	ADC_SetGain, .-ADC_SetGain
 827              		.global	__aeabi_idiv
 828              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 829              		.align	2
 830              		.global	ADC_CountsTo_mVolts
 831              		.code	16
 832              		.thumb_func
 833              		.type	ADC_CountsTo_mVolts, %function
 834              	ADC_CountsTo_mVolts:
 835              	.LFB15:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 29


 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 836              		.loc 1 757 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              	.LVL59:
 841 0000 70B5     		push	{r4, r5, r6, lr}
 842              		.cfi_def_cfa_offset 16
 843              		.cfi_offset 4, -16
 844              		.cfi_offset 5, -12
 845              		.cfi_offset 6, -8
 846              		.cfi_offset 14, -4
 847 0002 0400     		movs	r4, r0
 848 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 849              		.loc 1 761 0
 850 0006 0328     		cmp	r0, #3
 851 0008 02D9     		bls	.L68
 852              		.loc 1 761 0 is_stmt 0 discriminator 1
 853 000a 0020     		movs	r0, #0
 854              	.LVL60:
 855 000c FFF7FEFF 		bl	CyHalt
 856              	.LVL61:
 857              	.L68:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 858              		.loc 1 772 0 is_stmt 1
 859 0010 6300     		lsls	r3, r4, #1
 860 0012 0F4A     		ldr	r2, .L71
 861 0014 995A     		ldrh	r1, [r3, r2]
 862 0016 09B2     		sxth	r1, r1
 863 0018 691A     		subs	r1, r5, r1
 864 001a 09B2     		sxth	r1, r1
 865              	.LVL62:
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 866              		.loc 1 774 0
 867 001c 0D48     		ldr	r0, .L71+4
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 30


 868 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 869              		.loc 1 775 0
 870 0020 0029     		cmp	r1, #0
 871 0022 06DD     		ble	.L69
 872              		.loc 1 775 0 is_stmt 0 discriminator 1
 873 0024 A300     		lsls	r3, r4, #2
 874 0026 0C4A     		ldr	r2, .L71+8
 875 0028 9A58     		ldr	r2, [r3, r2]
 876 002a D30F     		lsrs	r3, r2, #31
 877 002c 9A18     		adds	r2, r3, r2
 878 002e 5310     		asrs	r3, r2, #1
 879 0030 06E0     		b	.L70
 880              	.L69:
 881              		.loc 1 775 0 discriminator 2
 882 0032 A300     		lsls	r3, r4, #2
 883 0034 084A     		ldr	r2, .L71+8
 884 0036 9A58     		ldr	r2, [r3, r2]
 885 0038 D30F     		lsrs	r3, r2, #31
 886 003a 9A18     		adds	r2, r3, r2
 887 003c 5210     		asrs	r2, r2, #1
 888 003e 5342     		rsbs	r3, r2, #0
 889              	.L70:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 890              		.loc 1 774 0 is_stmt 1
 891 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 892              		.loc 1 776 0
 893 0042 A400     		lsls	r4, r4, #2
 894              	.LVL63:
 895 0044 044B     		ldr	r3, .L71+8
 896 0046 E158     		ldr	r1, [r4, r3]
 897              	.LVL64:
 898 0048 FFF7FEFF 		bl	__aeabi_idiv
 899              	.LVL65:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 900              		.loc 1 774 0
 901 004c 00B2     		sxth	r0, r0
 902              	.LVL66:
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC.c ****     }
 903              		.loc 1 779 0
 904              		@ sp needed
 905 004e 70BD     		pop	{r4, r5, r6, pc}
 906              	.L72:
 907              		.align	2
 908              	.L71:
 909 0050 00000000 		.word	ADC_offset
 910 0054 10270000 		.word	10000
 911 0058 00000000 		.word	ADC_countsPer10Volt
 912              		.cfi_endproc
 913              	.LFE15:
 914              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 915              		.global	__aeabi_lmul
 916              		.global	__aeabi_ldivmod
 917              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 31


 918              		.align	2
 919              		.global	ADC_CountsTo_uVolts
 920              		.code	16
 921              		.thumb_func
 922              		.type	ADC_CountsTo_uVolts, %function
 923              	ADC_CountsTo_uVolts:
 924              	.LFB16:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 925              		.loc 1 811 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              	.LVL67:
 930 0000 70B5     		push	{r4, r5, r6, lr}
 931              		.cfi_def_cfa_offset 16
 932              		.cfi_offset 4, -16
 933              		.cfi_offset 5, -12
 934              		.cfi_offset 6, -8
 935              		.cfi_offset 14, -4
 936 0002 0500     		movs	r5, r0
 937 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 938              		.loc 1 815 0
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 32


 939 0006 0328     		cmp	r0, #3
 940 0008 02D9     		bls	.L74
 941              		.loc 1 815 0 is_stmt 0 discriminator 1
 942 000a 0020     		movs	r0, #0
 943              	.LVL68:
 944 000c FFF7FEFF 		bl	CyHalt
 945              	.LVL69:
 946              	.L74:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 947              		.loc 1 826 0 is_stmt 1
 948 0010 6A00     		lsls	r2, r5, #1
 949 0012 084B     		ldr	r3, .L75
 950 0014 D05A     		ldrh	r0, [r2, r3]
 951 0016 00B2     		sxth	r0, r0
 952 0018 201A     		subs	r0, r4, r0
 953 001a 00B2     		sxth	r0, r0
 954              	.LVL70:
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 955              		.loc 1 828 0
 956 001c C117     		asrs	r1, r0, #31
 957 001e 064A     		ldr	r2, .L75+4
 958 0020 0023     		movs	r3, #0
 959 0022 FFF7FEFF 		bl	__aeabi_lmul
 960              	.LVL71:
 961 0026 AD00     		lsls	r5, r5, #2
 962              	.LVL72:
 963 0028 044B     		ldr	r3, .L75+8
 964 002a EA58     		ldr	r2, [r5, r3]
 965 002c D317     		asrs	r3, r2, #31
 966 002e FFF7FEFF 		bl	__aeabi_ldivmod
 967              	.LVL73:
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC.c ****     }
 968              		.loc 1 831 0
 969              		@ sp needed
 970 0032 70BD     		pop	{r4, r5, r6, pc}
 971              	.L76:
 972              		.align	2
 973              	.L75:
 974 0034 00000000 		.word	ADC_offset
 975 0038 80969800 		.word	10000000
 976 003c 00000000 		.word	ADC_countsPer10Volt
 977              		.cfi_endproc
 978              	.LFE16:
 979              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 33


 980              		.global	__aeabi_i2f
 981              		.global	__aeabi_fmul
 982              		.global	__aeabi_fdiv
 983              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 984              		.align	2
 985              		.global	ADC_CountsTo_Volts
 986              		.code	16
 987              		.thumb_func
 988              		.type	ADC_CountsTo_Volts, %function
 989              	ADC_CountsTo_Volts:
 990              	.LFB17:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 991              		.loc 1 856 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              	.LVL74:
 996 0000 70B5     		push	{r4, r5, r6, lr}
 997              		.cfi_def_cfa_offset 16
 998              		.cfi_offset 4, -16
 999              		.cfi_offset 5, -12
 1000              		.cfi_offset 6, -8
 1001              		.cfi_offset 14, -4
 1002 0002 0400     		movs	r4, r0
 1003 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1004              		.loc 1 860 0
 1005 0006 0328     		cmp	r0, #3
 1006 0008 02D9     		bls	.L78
 1007              		.loc 1 860 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 34


 1008 000a 0020     		movs	r0, #0
 1009              	.LVL75:
 1010 000c FFF7FEFF 		bl	CyHalt
 1011              	.LVL76:
 1012              	.L78:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1013              		.loc 1 871 0 is_stmt 1
 1014 0010 6200     		lsls	r2, r4, #1
 1015 0012 0A4B     		ldr	r3, .L79
 1016 0014 D05A     		ldrh	r0, [r2, r3]
 1017 0016 00B2     		sxth	r0, r0
 1018 0018 281A     		subs	r0, r5, r0
 1019 001a 00B2     		sxth	r0, r0
 1020              	.LVL77:
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1021              		.loc 1 873 0
 1022 001c FFF7FEFF 		bl	__aeabi_i2f
 1023              	.LVL78:
 1024 0020 0749     		ldr	r1, .L79+4
 1025 0022 FFF7FEFF 		bl	__aeabi_fmul
 1026              	.LVL79:
 1027 0026 051C     		adds	r5, r0, #0
 1028 0028 A400     		lsls	r4, r4, #2
 1029              	.LVL80:
 1030 002a 064B     		ldr	r3, .L79+8
 1031 002c E058     		ldr	r0, [r4, r3]
 1032 002e FFF7FEFF 		bl	__aeabi_i2f
 1033              	.LVL81:
 1034 0032 011C     		adds	r1, r0, #0
 1035 0034 281C     		adds	r0, r5, #0
 1036 0036 FFF7FEFF 		bl	__aeabi_fdiv
 1037              	.LVL82:
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC.c ****     }
 1038              		.loc 1 876 0
 1039              		@ sp needed
 1040 003a 70BD     		pop	{r4, r5, r6, pc}
 1041              	.L80:
 1042              		.align	2
 1043              	.L79:
 1044 003c 00000000 		.word	ADC_offset
 1045 0040 00002041 		.word	1092616192
 1046 0044 00000000 		.word	ADC_countsPer10Volt
 1047              		.cfi_endproc
 1048              	.LFE17:
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 35


 1049              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1050              		.comm	ADC_countsPer10Volt,16,4
 1051              		.comm	ADC_offset,8,4
 1052              		.global	ADC_initVar
 1053              		.section	.rodata
 1054              		.align	2
 1055              		.set	.LANCHOR0,. + 0
 1056              		.type	ADC_channelsConfig, %object
 1057              		.size	ADC_channelsConfig, 16
 1058              	ADC_channelsConfig:
 1059 0000 00040000 		.word	1024
 1060 0004 00040000 		.word	1024
 1061 0008 00040000 		.word	1024
 1062 000c 00040000 		.word	1024
 1063              		.type	ADC_InputsPlacement.4874, %object
 1064              		.size	ADC_InputsPlacement.4874, 4
 1065              	ADC_InputsPlacement.4874:
 1066 0010 01       		.byte	1
 1067 0011 02       		.byte	2
 1068 0012 03       		.byte	3
 1069 0013 04       		.byte	4
 1070              		.bss
 1071              		.set	.LANCHOR1,. + 0
 1072              		.type	ADC_initVar, %object
 1073              		.size	ADC_initVar, 1
 1074              	ADC_initVar:
 1075 0000 00       		.space	1
 1076              		.text
 1077              	.Letext0:
 1078              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1079              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1080              		.section	.debug_info,"",%progbits
 1081              	.Ldebug_info0:
 1082 0000 A1050000 		.4byte	0x5a1
 1083 0004 0400     		.2byte	0x4
 1084 0006 00000000 		.4byte	.Ldebug_abbrev0
 1085 000a 04       		.byte	0x4
 1086 000b 01       		.uleb128 0x1
 1087 000c 32000000 		.4byte	.LASF64
 1088 0010 0C       		.byte	0xc
 1089 0011 DB020000 		.4byte	.LASF65
 1090 0015 1D020000 		.4byte	.LASF66
 1091 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1092 001d 00000000 		.4byte	0
 1093 0021 00000000 		.4byte	.Ldebug_line0
 1094 0025 02       		.uleb128 0x2
 1095 0026 01       		.byte	0x1
 1096 0027 06       		.byte	0x6
 1097 0028 0A010000 		.4byte	.LASF0
 1098 002c 02       		.uleb128 0x2
 1099 002d 01       		.byte	0x1
 1100 002e 08       		.byte	0x8
 1101 002f 3F030000 		.4byte	.LASF1
 1102 0033 02       		.uleb128 0x2
 1103 0034 02       		.byte	0x2
 1104 0035 05       		.byte	0x5
 1105 0036 58030000 		.4byte	.LASF2
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 36


 1106 003a 02       		.uleb128 0x2
 1107 003b 02       		.byte	0x2
 1108 003c 07       		.byte	0x7
 1109 003d EB010000 		.4byte	.LASF3
 1110 0041 02       		.uleb128 0x2
 1111 0042 04       		.byte	0x4
 1112 0043 05       		.byte	0x5
 1113 0044 2D010000 		.4byte	.LASF4
 1114 0048 02       		.uleb128 0x2
 1115 0049 04       		.byte	0x4
 1116 004a 07       		.byte	0x7
 1117 004b BA010000 		.4byte	.LASF5
 1118 004f 02       		.uleb128 0x2
 1119 0050 08       		.byte	0x8
 1120 0051 05       		.byte	0x5
 1121 0052 FC000000 		.4byte	.LASF6
 1122 0056 02       		.uleb128 0x2
 1123 0057 08       		.byte	0x8
 1124 0058 07       		.byte	0x7
 1125 0059 C0000000 		.4byte	.LASF7
 1126 005d 03       		.uleb128 0x3
 1127 005e 04       		.byte	0x4
 1128 005f 05       		.byte	0x5
 1129 0060 696E7400 		.ascii	"int\000"
 1130 0064 02       		.uleb128 0x2
 1131 0065 04       		.byte	0x4
 1132 0066 07       		.byte	0x7
 1133 0067 A6010000 		.4byte	.LASF8
 1134 006b 04       		.uleb128 0x4
 1135 006c 5E010000 		.4byte	.LASF9
 1136 0070 02       		.byte	0x2
 1137 0071 FC01     		.2byte	0x1fc
 1138 0073 2C000000 		.4byte	0x2c
 1139 0077 04       		.uleb128 0x4
 1140 0078 00000000 		.4byte	.LASF10
 1141 007c 02       		.byte	0x2
 1142 007d FD01     		.2byte	0x1fd
 1143 007f 3A000000 		.4byte	0x3a
 1144 0083 04       		.uleb128 0x4
 1145 0084 75010000 		.4byte	.LASF11
 1146 0088 02       		.byte	0x2
 1147 0089 FE01     		.2byte	0x1fe
 1148 008b 48000000 		.4byte	0x48
 1149 008f 04       		.uleb128 0x4
 1150 0090 AA030000 		.4byte	.LASF12
 1151 0094 02       		.byte	0x2
 1152 0095 0002     		.2byte	0x200
 1153 0097 33000000 		.4byte	0x33
 1154 009b 04       		.uleb128 0x4
 1155 009c 1D010000 		.4byte	.LASF13
 1156 00a0 02       		.byte	0x2
 1157 00a1 0102     		.2byte	0x201
 1158 00a3 41000000 		.4byte	0x41
 1159 00a7 04       		.uleb128 0x4
 1160 00a8 69020000 		.4byte	.LASF14
 1161 00ac 02       		.byte	0x2
 1162 00ad 0202     		.2byte	0x202
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 37


 1163 00af B3000000 		.4byte	0xb3
 1164 00b3 02       		.uleb128 0x2
 1165 00b4 04       		.byte	0x4
 1166 00b5 04       		.byte	0x4
 1167 00b6 04030000 		.4byte	.LASF15
 1168 00ba 02       		.uleb128 0x2
 1169 00bb 08       		.byte	0x8
 1170 00bc 04       		.byte	0x4
 1171 00bd 6E010000 		.4byte	.LASF16
 1172 00c1 04       		.uleb128 0x4
 1173 00c2 B4020000 		.4byte	.LASF17
 1174 00c6 02       		.byte	0x2
 1175 00c7 0702     		.2byte	0x207
 1176 00c9 4F000000 		.4byte	0x4f
 1177 00cd 02       		.uleb128 0x2
 1178 00ce 01       		.byte	0x1
 1179 00cf 08       		.byte	0x8
 1180 00d0 76030000 		.4byte	.LASF18
 1181 00d4 04       		.uleb128 0x4
 1182 00d5 63020000 		.4byte	.LASF19
 1183 00d9 02       		.byte	0x2
 1184 00da A802     		.2byte	0x2a8
 1185 00dc E0000000 		.4byte	0xe0
 1186 00e0 05       		.uleb128 0x5
 1187 00e1 83000000 		.4byte	0x83
 1188 00e5 02       		.uleb128 0x2
 1189 00e6 08       		.byte	0x8
 1190 00e7 04       		.byte	0x4
 1191 00e8 83020000 		.4byte	.LASF20
 1192 00ec 02       		.uleb128 0x2
 1193 00ed 04       		.byte	0x4
 1194 00ee 07       		.byte	0x7
 1195 00ef 71020000 		.4byte	.LASF21
 1196 00f3 06       		.uleb128 0x6
 1197 00f4 29000000 		.4byte	.LASF26
 1198 00f8 01       		.byte	0x1
 1199 00f9 5E       		.byte	0x5e
 1200 00fa 00000000 		.4byte	.LFB1
 1201 00fe 88010000 		.4byte	.LFE1-.LFB1
 1202 0102 01       		.uleb128 0x1
 1203 0103 9C       		.byte	0x9c
 1204 0104 6E010000 		.4byte	0x16e
 1205 0108 07       		.uleb128 0x7
 1206 0109 6B030000 		.4byte	.LASF22
 1207 010d 01       		.byte	0x1
 1208 010e 60       		.byte	0x60
 1209 010f 83000000 		.4byte	0x83
 1210 0113 00000000 		.4byte	.LLST0
 1211 0117 07       		.uleb128 0x7
 1212 0118 E1010000 		.4byte	.LASF23
 1213 011c 01       		.byte	0x1
 1214 011d 61       		.byte	0x61
 1215 011e 83000000 		.4byte	0x83
 1216 0122 1F000000 		.4byte	.LLST1
 1217 0126 07       		.uleb128 0x7
 1218 0127 0F000000 		.4byte	.LASF24
 1219 012b 01       		.byte	0x1
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 38


 1220 012c 62       		.byte	0x62
 1221 012d 9B000000 		.4byte	0x9b
 1222 0131 78010000 		.4byte	.LLST2
 1223 0135 08       		.uleb128 0x8
 1224 0136 D7000000 		.4byte	.LASF25
 1225 013a 01       		.byte	0x1
 1226 013b 65       		.byte	0x65
 1227 013c 83010000 		.4byte	0x183
 1228 0140 05       		.uleb128 0x5
 1229 0141 03       		.byte	0x3
 1230 0142 10000000 		.4byte	ADC_InputsPlacement.4874
 1231 0146 09       		.uleb128 0x9
 1232 0147 0A000000 		.4byte	.LVL0
 1233 014b 78050000 		.4byte	0x578
 1234 014f 5E010000 		.4byte	0x15e
 1235 0153 0A       		.uleb128 0xa
 1236 0154 01       		.uleb128 0x1
 1237 0155 50       		.byte	0x50
 1238 0156 01       		.uleb128 0x1
 1239 0157 3E       		.byte	0x3e
 1240 0158 0A       		.uleb128 0xa
 1241 0159 01       		.uleb128 0x1
 1242 015a 51       		.byte	0x51
 1243 015b 01       		.uleb128 0x1
 1244 015c 33       		.byte	0x33
 1245 015d 00       		.byte	0
 1246 015e 0B       		.uleb128 0xb
 1247 015f 12000000 		.4byte	.LVL1
 1248 0163 83050000 		.4byte	0x583
 1249 0167 0A       		.uleb128 0xa
 1250 0168 01       		.uleb128 0x1
 1251 0169 50       		.byte	0x50
 1252 016a 01       		.uleb128 0x1
 1253 016b 3E       		.byte	0x3e
 1254 016c 00       		.byte	0
 1255 016d 00       		.byte	0
 1256 016e 0C       		.uleb128 0xc
 1257 016f 7E010000 		.4byte	0x17e
 1258 0173 7E010000 		.4byte	0x17e
 1259 0177 0D       		.uleb128 0xd
 1260 0178 EC000000 		.4byte	0xec
 1261 017c 03       		.byte	0x3
 1262 017d 00       		.byte	0
 1263 017e 0E       		.uleb128 0xe
 1264 017f 6B000000 		.4byte	0x6b
 1265 0183 0E       		.uleb128 0xe
 1266 0184 6E010000 		.4byte	0x16e
 1267 0188 0F       		.uleb128 0xf
 1268 0189 9F030000 		.4byte	.LASF27
 1269 018d 01       		.byte	0x1
 1270 018e 4A01     		.2byte	0x14a
 1271 0190 00000000 		.4byte	.LFB2
 1272 0194 24000000 		.4byte	.LFE2-.LFB2
 1273 0198 01       		.uleb128 0x1
 1274 0199 9C       		.byte	0x9c
 1275 019a AE010000 		.4byte	0x1ae
 1276 019e 0B       		.uleb128 0xb
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 39


 1277 019f 1C000000 		.4byte	.LVL22
 1278 01a3 8E050000 		.4byte	0x58e
 1279 01a7 0A       		.uleb128 0xa
 1280 01a8 01       		.uleb128 0x1
 1281 01a9 50       		.byte	0x50
 1282 01aa 01       		.uleb128 0x1
 1283 01ab 3A       		.byte	0x3a
 1284 01ac 00       		.byte	0
 1285 01ad 00       		.byte	0
 1286 01ae 06       		.uleb128 0x6
 1287 01af 23010000 		.4byte	.LASF28
 1288 01b3 01       		.byte	0x1
 1289 01b4 3F       		.byte	0x3f
 1290 01b5 00000000 		.4byte	.LFB0
 1291 01b9 20000000 		.4byte	.LFE0-.LFB0
 1292 01bd 01       		.uleb128 0x1
 1293 01be 9C       		.byte	0x9c
 1294 01bf D6010000 		.4byte	0x1d6
 1295 01c3 10       		.uleb128 0x10
 1296 01c4 0E000000 		.4byte	.LVL23
 1297 01c8 F3000000 		.4byte	0xf3
 1298 01cc 10       		.uleb128 0x10
 1299 01cd 18000000 		.4byte	.LVL24
 1300 01d1 88010000 		.4byte	0x188
 1301 01d5 00       		.byte	0
 1302 01d6 11       		.uleb128 0x11
 1303 01d7 62030000 		.4byte	.LASF29
 1304 01db 01       		.byte	0x1
 1305 01dc 6D01     		.2byte	0x16d
 1306 01de 00000000 		.4byte	.LFB3
 1307 01e2 10000000 		.4byte	.LFE3-.LFB3
 1308 01e6 01       		.uleb128 0x1
 1309 01e7 9C       		.byte	0x9c
 1310 01e8 11       		.uleb128 0x11
 1311 01e9 EB000000 		.4byte	.LASF30
 1312 01ed 01       		.byte	0x1
 1313 01ee 8701     		.2byte	0x187
 1314 01f0 00000000 		.4byte	.LFB4
 1315 01f4 14000000 		.4byte	.LFE4-.LFB4
 1316 01f8 01       		.uleb128 0x1
 1317 01f9 9C       		.byte	0x9c
 1318 01fa 11       		.uleb128 0x11
 1319 01fb 0D020000 		.4byte	.LASF31
 1320 01ff 01       		.byte	0x1
 1321 0200 A001     		.2byte	0x1a0
 1322 0202 00000000 		.4byte	.LFB5
 1323 0206 14000000 		.4byte	.LFE5-.LFB5
 1324 020a 01       		.uleb128 0x1
 1325 020b 9C       		.byte	0x9c
 1326 020c 12       		.uleb128 0x12
 1327 020d A0020000 		.4byte	.LASF33
 1328 0211 01       		.byte	0x1
 1329 0212 C201     		.2byte	0x1c2
 1330 0214 83000000 		.4byte	0x83
 1331 0218 00000000 		.4byte	.LFB6
 1332 021c 28000000 		.4byte	.LFE6-.LFB6
 1333 0220 01       		.uleb128 0x1
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 40


 1334 0221 9C       		.byte	0x9c
 1335 0222 47020000 		.4byte	0x247
 1336 0226 13       		.uleb128 0x13
 1337 0227 8D010000 		.4byte	.LASF35
 1338 022b 01       		.byte	0x1
 1339 022c C201     		.2byte	0x1c2
 1340 022e 83000000 		.4byte	0x83
 1341 0232 8B010000 		.4byte	.LLST3
 1342 0236 14       		.uleb128 0x14
 1343 0237 16010000 		.4byte	.LASF32
 1344 023b 01       		.byte	0x1
 1345 023c C401     		.2byte	0x1c4
 1346 023e 83000000 		.4byte	0x83
 1347 0242 D0010000 		.4byte	.LLST4
 1348 0246 00       		.byte	0
 1349 0247 12       		.uleb128 0x12
 1350 0248 C5030000 		.4byte	.LASF34
 1351 024c 01       		.byte	0x1
 1352 024d F801     		.2byte	0x1f8
 1353 024f 8F000000 		.4byte	0x8f
 1354 0253 00000000 		.4byte	.LFB7
 1355 0257 2C000000 		.4byte	.LFE7-.LFB7
 1356 025b 01       		.uleb128 0x1
 1357 025c 9C       		.byte	0x9c
 1358 025d 91020000 		.4byte	0x291
 1359 0261 13       		.uleb128 0x13
 1360 0262 71030000 		.4byte	.LASF36
 1361 0266 01       		.byte	0x1
 1362 0267 F801     		.2byte	0x1f8
 1363 0269 83000000 		.4byte	0x83
 1364 026d 06020000 		.4byte	.LLST5
 1365 0271 14       		.uleb128 0x14
 1366 0272 BE030000 		.4byte	.LASF37
 1367 0276 01       		.byte	0x1
 1368 0277 FA01     		.2byte	0x1fa
 1369 0279 83000000 		.4byte	0x83
 1370 027d 4B020000 		.4byte	.LLST6
 1371 0281 0B       		.uleb128 0xb
 1372 0282 0E000000 		.4byte	.LVL34
 1373 0286 99050000 		.4byte	0x599
 1374 028a 0A       		.uleb128 0xa
 1375 028b 01       		.uleb128 0x1
 1376 028c 50       		.byte	0x50
 1377 028d 01       		.uleb128 0x1
 1378 028e 30       		.byte	0x30
 1379 028f 00       		.byte	0
 1380 0290 00       		.byte	0
 1381 0291 0F       		.uleb128 0xf
 1382 0292 CB020000 		.4byte	.LASF38
 1383 0296 01       		.byte	0x1
 1384 0297 2502     		.2byte	0x225
 1385 0299 00000000 		.4byte	.LFB8
 1386 029d 10000000 		.4byte	.LFE8-.LFB8
 1387 02a1 01       		.uleb128 0x1
 1388 02a2 9C       		.byte	0x9c
 1389 02a3 B8020000 		.4byte	0x2b8
 1390 02a7 13       		.uleb128 0x13
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 41


 1391 02a8 7C010000 		.4byte	.LASF39
 1392 02ac 01       		.byte	0x1
 1393 02ad 2502     		.2byte	0x225
 1394 02af 83000000 		.4byte	0x83
 1395 02b3 69020000 		.4byte	.LLST7
 1396 02b7 00       		.byte	0
 1397 02b8 0F       		.uleb128 0xf
 1398 02b9 28030000 		.4byte	.LASF40
 1399 02bd 01       		.byte	0x1
 1400 02be 5102     		.2byte	0x251
 1401 02c0 00000000 		.4byte	.LFB9
 1402 02c4 1C000000 		.4byte	.LFE9-.LFB9
 1403 02c8 01       		.uleb128 0x1
 1404 02c9 9C       		.byte	0x9c
 1405 02ca DF020000 		.4byte	0x2df
 1406 02ce 13       		.uleb128 0x13
 1407 02cf 7A020000 		.4byte	.LASF41
 1408 02d3 01       		.byte	0x1
 1409 02d4 5102     		.2byte	0x251
 1410 02d6 83000000 		.4byte	0x83
 1411 02da 8A020000 		.4byte	.LLST8
 1412 02de 00       		.byte	0
 1413 02df 0F       		.uleb128 0xf
 1414 02e0 8F020000 		.4byte	.LASF42
 1415 02e4 01       		.byte	0x1
 1416 02e5 6602     		.2byte	0x266
 1417 02e7 00000000 		.4byte	.LFB10
 1418 02eb 18000000 		.4byte	.LFE10-.LFB10
 1419 02ef 01       		.uleb128 0x1
 1420 02f0 9C       		.byte	0x9c
 1421 02f1 06030000 		.4byte	0x306
 1422 02f5 13       		.uleb128 0x13
 1423 02f6 0A030000 		.4byte	.LASF43
 1424 02fa 01       		.byte	0x1
 1425 02fb 6602     		.2byte	0x266
 1426 02fd 83000000 		.4byte	0x83
 1427 0301 AB020000 		.4byte	.LLST9
 1428 0305 00       		.byte	0
 1429 0306 0F       		.uleb128 0xf
 1430 0307 95010000 		.4byte	.LASF44
 1431 030b 01       		.byte	0x1
 1432 030c 7E02     		.2byte	0x27e
 1433 030e 00000000 		.4byte	.LFB11
 1434 0312 10000000 		.4byte	.LFE11-.LFB11
 1435 0316 01       		.uleb128 0x1
 1436 0317 9C       		.byte	0x9c
 1437 0318 2D030000 		.4byte	0x32d
 1438 031c 13       		.uleb128 0x13
 1439 031d 7C010000 		.4byte	.LASF39
 1440 0321 01       		.byte	0x1
 1441 0322 7E02     		.2byte	0x27e
 1442 0324 83000000 		.4byte	0x83
 1443 0328 CC020000 		.4byte	.LLST10
 1444 032c 00       		.byte	0
 1445 032d 0F       		.uleb128 0xf
 1446 032e CC010000 		.4byte	.LASF45
 1447 0332 01       		.byte	0x1
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 42


 1448 0333 9502     		.2byte	0x295
 1449 0335 00000000 		.4byte	.LFB12
 1450 0339 10000000 		.4byte	.LFE12-.LFB12
 1451 033d 01       		.uleb128 0x1
 1452 033e 9C       		.byte	0x9c
 1453 033f 54030000 		.4byte	0x354
 1454 0343 13       		.uleb128 0x13
 1455 0344 7C010000 		.4byte	.LASF39
 1456 0348 01       		.byte	0x1
 1457 0349 9502     		.2byte	0x295
 1458 034b 83000000 		.4byte	0x83
 1459 034f ED020000 		.4byte	.LLST11
 1460 0353 00       		.byte	0
 1461 0354 0F       		.uleb128 0xf
 1462 0355 B0030000 		.4byte	.LASF46
 1463 0359 01       		.byte	0x1
 1464 035a B102     		.2byte	0x2b1
 1465 035c 00000000 		.4byte	.LFB13
 1466 0360 1C000000 		.4byte	.LFE13-.LFB13
 1467 0364 01       		.uleb128 0x1
 1468 0365 9C       		.byte	0x9c
 1469 0366 9A030000 		.4byte	0x39a
 1470 036a 13       		.uleb128 0x13
 1471 036b 71030000 		.4byte	.LASF36
 1472 036f 01       		.byte	0x1
 1473 0370 B102     		.2byte	0x2b1
 1474 0372 83000000 		.4byte	0x83
 1475 0376 0E030000 		.4byte	.LLST12
 1476 037a 13       		.uleb128 0x13
 1477 037b 8E030000 		.4byte	.LASF47
 1478 037f 01       		.byte	0x1
 1479 0380 B102     		.2byte	0x2b1
 1480 0382 8F000000 		.4byte	0x8f
 1481 0386 3A030000 		.4byte	.LLST13
 1482 038a 0B       		.uleb128 0xb
 1483 038b 10000000 		.4byte	.LVL52
 1484 038f 99050000 		.4byte	0x599
 1485 0393 0A       		.uleb128 0xa
 1486 0394 01       		.uleb128 0x1
 1487 0395 50       		.byte	0x50
 1488 0396 01       		.uleb128 0x1
 1489 0397 30       		.byte	0x30
 1490 0398 00       		.byte	0
 1491 0399 00       		.byte	0
 1492 039a 0F       		.uleb128 0xf
 1493 039b F8020000 		.4byte	.LASF48
 1494 039f 01       		.byte	0x1
 1495 03a0 D302     		.2byte	0x2d3
 1496 03a2 00000000 		.4byte	.LFB14
 1497 03a6 1C000000 		.4byte	.LFE14-.LFB14
 1498 03aa 01       		.uleb128 0x1
 1499 03ab 9C       		.byte	0x9c
 1500 03ac E0030000 		.4byte	0x3e0
 1501 03b0 13       		.uleb128 0x13
 1502 03b1 71030000 		.4byte	.LASF36
 1503 03b5 01       		.byte	0x1
 1504 03b6 D302     		.2byte	0x2d3
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 43


 1505 03b8 83000000 		.4byte	0x83
 1506 03bc 5B030000 		.4byte	.LLST14
 1507 03c0 13       		.uleb128 0x13
 1508 03c1 07000000 		.4byte	.LASF49
 1509 03c5 01       		.byte	0x1
 1510 03c6 D302     		.2byte	0x2d3
 1511 03c8 9B000000 		.4byte	0x9b
 1512 03cc 87030000 		.4byte	.LLST15
 1513 03d0 0B       		.uleb128 0xb
 1514 03d1 10000000 		.4byte	.LVL56
 1515 03d5 99050000 		.4byte	0x599
 1516 03d9 0A       		.uleb128 0xa
 1517 03da 01       		.uleb128 0x1
 1518 03db 50       		.byte	0x50
 1519 03dc 01       		.uleb128 0x1
 1520 03dd 30       		.byte	0x30
 1521 03de 00       		.byte	0
 1522 03df 00       		.byte	0
 1523 03e0 15       		.uleb128 0x15
 1524 03e1 14030000 		.4byte	.LASF50
 1525 03e5 01       		.byte	0x1
 1526 03e6 F402     		.2byte	0x2f4
 1527 03e8 8F000000 		.4byte	0x8f
 1528 03ec 00000000 		.4byte	.LFB15
 1529 03f0 5C000000 		.4byte	.LFE15-.LFB15
 1530 03f4 01       		.uleb128 0x1
 1531 03f5 9C       		.byte	0x9c
 1532 03f6 38040000 		.4byte	0x438
 1533 03fa 13       		.uleb128 0x13
 1534 03fb 71030000 		.4byte	.LASF36
 1535 03ff 01       		.byte	0x1
 1536 0400 F402     		.2byte	0x2f4
 1537 0402 83000000 		.4byte	0x83
 1538 0406 B7030000 		.4byte	.LLST16
 1539 040a 13       		.uleb128 0x13
 1540 040b 95030000 		.4byte	.LASF51
 1541 040f 01       		.byte	0x1
 1542 0410 F402     		.2byte	0x2f4
 1543 0412 8F000000 		.4byte	0x8f
 1544 0416 E3030000 		.4byte	.LLST17
 1545 041a 16       		.uleb128 0x16
 1546 041b 5C020000 		.4byte	.LASF52
 1547 041f 01       		.byte	0x1
 1548 0420 F602     		.2byte	0x2f6
 1549 0422 8F000000 		.4byte	0x8f
 1550 0426 01       		.uleb128 0x1
 1551 0427 50       		.byte	0x50
 1552 0428 0B       		.uleb128 0xb
 1553 0429 10000000 		.4byte	.LVL61
 1554 042d 99050000 		.4byte	0x599
 1555 0431 0A       		.uleb128 0xa
 1556 0432 01       		.uleb128 0x1
 1557 0433 50       		.byte	0x50
 1558 0434 01       		.uleb128 0x1
 1559 0435 30       		.byte	0x30
 1560 0436 00       		.byte	0
 1561 0437 00       		.byte	0
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 44


 1562 0438 15       		.uleb128 0x15
 1563 0439 36010000 		.4byte	.LASF53
 1564 043d 01       		.byte	0x1
 1565 043e 2A03     		.2byte	0x32a
 1566 0440 9B000000 		.4byte	0x9b
 1567 0444 00000000 		.4byte	.LFB16
 1568 0448 40000000 		.4byte	.LFE16-.LFB16
 1569 044c 01       		.uleb128 0x1
 1570 044d 9C       		.byte	0x9c
 1571 044e 8E040000 		.4byte	0x48e
 1572 0452 13       		.uleb128 0x13
 1573 0453 71030000 		.4byte	.LASF36
 1574 0457 01       		.byte	0x1
 1575 0458 2A03     		.2byte	0x32a
 1576 045a 83000000 		.4byte	0x83
 1577 045e 0F040000 		.4byte	.LLST18
 1578 0462 13       		.uleb128 0x13
 1579 0463 95030000 		.4byte	.LASF51
 1580 0467 01       		.byte	0x1
 1581 0468 2A03     		.2byte	0x32a
 1582 046a 8F000000 		.4byte	0x8f
 1583 046e 3B040000 		.4byte	.LLST19
 1584 0472 17       		.uleb128 0x17
 1585 0473 B3010000 		.4byte	.LASF67
 1586 0477 01       		.byte	0x1
 1587 0478 2C03     		.2byte	0x32c
 1588 047a C1000000 		.4byte	0xc1
 1589 047e 0B       		.uleb128 0xb
 1590 047f 10000000 		.4byte	.LVL69
 1591 0483 99050000 		.4byte	0x599
 1592 0487 0A       		.uleb128 0xa
 1593 0488 01       		.uleb128 0x1
 1594 0489 50       		.byte	0x50
 1595 048a 01       		.uleb128 0x1
 1596 048b 30       		.byte	0x30
 1597 048c 00       		.byte	0
 1598 048d 00       		.byte	0
 1599 048e 15       		.uleb128 0x15
 1600 048f 16000000 		.4byte	.LASF54
 1601 0493 01       		.byte	0x1
 1602 0494 5703     		.2byte	0x357
 1603 0496 A7000000 		.4byte	0xa7
 1604 049a 00000000 		.4byte	.LFB17
 1605 049e 48000000 		.4byte	.LFE17-.LFB17
 1606 04a2 01       		.uleb128 0x1
 1607 04a3 9C       		.byte	0x9c
 1608 04a4 E6040000 		.4byte	0x4e6
 1609 04a8 13       		.uleb128 0x13
 1610 04a9 71030000 		.4byte	.LASF36
 1611 04ad 01       		.byte	0x1
 1612 04ae 5703     		.2byte	0x357
 1613 04b0 83000000 		.4byte	0x83
 1614 04b4 67040000 		.4byte	.LLST20
 1615 04b8 13       		.uleb128 0x13
 1616 04b9 95030000 		.4byte	.LASF51
 1617 04bd 01       		.byte	0x1
 1618 04be 5703     		.2byte	0x357
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 45


 1619 04c0 8F000000 		.4byte	0x8f
 1620 04c4 93040000 		.4byte	.LLST21
 1621 04c8 16       		.uleb128 0x16
 1622 04c9 DB010000 		.4byte	.LASF55
 1623 04cd 01       		.byte	0x1
 1624 04ce 5903     		.2byte	0x359
 1625 04d0 A7000000 		.4byte	0xa7
 1626 04d4 01       		.uleb128 0x1
 1627 04d5 50       		.byte	0x50
 1628 04d6 0B       		.uleb128 0xb
 1629 04d7 10000000 		.4byte	.LVL76
 1630 04db 99050000 		.4byte	0x599
 1631 04df 0A       		.uleb128 0xa
 1632 04e0 01       		.uleb128 0x1
 1633 04e1 50       		.byte	0x50
 1634 04e2 01       		.uleb128 0x1
 1635 04e3 30       		.byte	0x30
 1636 04e4 00       		.byte	0
 1637 04e5 00       		.byte	0
 1638 04e6 0C       		.uleb128 0xc
 1639 04e7 F6040000 		.4byte	0x4f6
 1640 04eb F6040000 		.4byte	0x4f6
 1641 04ef 0D       		.uleb128 0xd
 1642 04f0 EC000000 		.4byte	0xec
 1643 04f4 03       		.byte	0x3
 1644 04f5 00       		.byte	0
 1645 04f6 0E       		.uleb128 0xe
 1646 04f7 83000000 		.4byte	0x83
 1647 04fb 08       		.uleb128 0x8
 1648 04fc 7B030000 		.4byte	.LASF56
 1649 0500 01       		.byte	0x1
 1650 0501 21       		.byte	0x21
 1651 0502 0C050000 		.4byte	0x50c
 1652 0506 05       		.uleb128 0x5
 1653 0507 03       		.byte	0x3
 1654 0508 00000000 		.4byte	ADC_channelsConfig
 1655 050c 0E       		.uleb128 0xe
 1656 050d E6040000 		.4byte	0x4e6
 1657 0511 18       		.uleb128 0x18
 1658 0512 81010000 		.4byte	.LASF57
 1659 0516 01       		.byte	0x1
 1660 0517 18       		.byte	0x18
 1661 0518 6B000000 		.4byte	0x6b
 1662 051c 05       		.uleb128 0x5
 1663 051d 03       		.byte	0x3
 1664 051e 00000000 		.4byte	ADC_initVar
 1665 0522 0C       		.uleb128 0xc
 1666 0523 32050000 		.4byte	0x532
 1667 0527 32050000 		.4byte	0x532
 1668 052b 0D       		.uleb128 0xd
 1669 052c EC000000 		.4byte	0xec
 1670 0530 03       		.byte	0x3
 1671 0531 00       		.byte	0
 1672 0532 05       		.uleb128 0x5
 1673 0533 8F000000 		.4byte	0x8f
 1674 0537 18       		.uleb128 0x18
 1675 0538 4D030000 		.4byte	.LASF58
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 46


 1676 053c 01       		.byte	0x1
 1677 053d 19       		.byte	0x19
 1678 053e 48050000 		.4byte	0x548
 1679 0542 05       		.uleb128 0x5
 1680 0543 03       		.byte	0x3
 1681 0544 00000000 		.4byte	ADC_offset
 1682 0548 05       		.uleb128 0x5
 1683 0549 22050000 		.4byte	0x522
 1684 054d 0C       		.uleb128 0xc
 1685 054e 5D050000 		.4byte	0x55d
 1686 0552 5D050000 		.4byte	0x55d
 1687 0556 0D       		.uleb128 0xd
 1688 0557 EC000000 		.4byte	0xec
 1689 055b 03       		.byte	0x3
 1690 055c 00       		.byte	0
 1691 055d 05       		.uleb128 0x5
 1692 055e 9B000000 		.4byte	0x9b
 1693 0562 18       		.uleb128 0x18
 1694 0563 4A010000 		.4byte	.LASF59
 1695 0567 01       		.byte	0x1
 1696 0568 1A       		.byte	0x1a
 1697 0569 73050000 		.4byte	0x573
 1698 056d 05       		.uleb128 0x5
 1699 056e 03       		.byte	0x3
 1700 056f 00000000 		.4byte	ADC_countsPer10Volt
 1701 0573 05       		.uleb128 0x5
 1702 0574 4D050000 		.4byte	0x54d
 1703 0578 19       		.uleb128 0x19
 1704 0579 BA020000 		.4byte	.LASF60
 1705 057d BA020000 		.4byte	.LASF60
 1706 0581 03       		.byte	0x3
 1707 0582 D3       		.byte	0xd3
 1708 0583 19       		.uleb128 0x19
 1709 0584 FE010000 		.4byte	.LASF61
 1710 0588 FE010000 		.4byte	.LASF61
 1711 058c 03       		.byte	0x3
 1712 058d D0       		.byte	0xd0
 1713 058e 19       		.uleb128 0x19
 1714 058f 64010000 		.4byte	.LASF62
 1715 0593 64010000 		.4byte	.LASF62
 1716 0597 03       		.byte	0x3
 1717 0598 ED       		.byte	0xed
 1718 0599 19       		.uleb128 0x19
 1719 059a 38030000 		.4byte	.LASF63
 1720 059e 38030000 		.4byte	.LASF63
 1721 05a2 03       		.byte	0x3
 1722 05a3 FA       		.byte	0xfa
 1723 05a4 00       		.byte	0
 1724              		.section	.debug_abbrev,"",%progbits
 1725              	.Ldebug_abbrev0:
 1726 0000 01       		.uleb128 0x1
 1727 0001 11       		.uleb128 0x11
 1728 0002 01       		.byte	0x1
 1729 0003 25       		.uleb128 0x25
 1730 0004 0E       		.uleb128 0xe
 1731 0005 13       		.uleb128 0x13
 1732 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 47


 1733 0007 03       		.uleb128 0x3
 1734 0008 0E       		.uleb128 0xe
 1735 0009 1B       		.uleb128 0x1b
 1736 000a 0E       		.uleb128 0xe
 1737 000b 55       		.uleb128 0x55
 1738 000c 17       		.uleb128 0x17
 1739 000d 11       		.uleb128 0x11
 1740 000e 01       		.uleb128 0x1
 1741 000f 10       		.uleb128 0x10
 1742 0010 17       		.uleb128 0x17
 1743 0011 00       		.byte	0
 1744 0012 00       		.byte	0
 1745 0013 02       		.uleb128 0x2
 1746 0014 24       		.uleb128 0x24
 1747 0015 00       		.byte	0
 1748 0016 0B       		.uleb128 0xb
 1749 0017 0B       		.uleb128 0xb
 1750 0018 3E       		.uleb128 0x3e
 1751 0019 0B       		.uleb128 0xb
 1752 001a 03       		.uleb128 0x3
 1753 001b 0E       		.uleb128 0xe
 1754 001c 00       		.byte	0
 1755 001d 00       		.byte	0
 1756 001e 03       		.uleb128 0x3
 1757 001f 24       		.uleb128 0x24
 1758 0020 00       		.byte	0
 1759 0021 0B       		.uleb128 0xb
 1760 0022 0B       		.uleb128 0xb
 1761 0023 3E       		.uleb128 0x3e
 1762 0024 0B       		.uleb128 0xb
 1763 0025 03       		.uleb128 0x3
 1764 0026 08       		.uleb128 0x8
 1765 0027 00       		.byte	0
 1766 0028 00       		.byte	0
 1767 0029 04       		.uleb128 0x4
 1768 002a 16       		.uleb128 0x16
 1769 002b 00       		.byte	0
 1770 002c 03       		.uleb128 0x3
 1771 002d 0E       		.uleb128 0xe
 1772 002e 3A       		.uleb128 0x3a
 1773 002f 0B       		.uleb128 0xb
 1774 0030 3B       		.uleb128 0x3b
 1775 0031 05       		.uleb128 0x5
 1776 0032 49       		.uleb128 0x49
 1777 0033 13       		.uleb128 0x13
 1778 0034 00       		.byte	0
 1779 0035 00       		.byte	0
 1780 0036 05       		.uleb128 0x5
 1781 0037 35       		.uleb128 0x35
 1782 0038 00       		.byte	0
 1783 0039 49       		.uleb128 0x49
 1784 003a 13       		.uleb128 0x13
 1785 003b 00       		.byte	0
 1786 003c 00       		.byte	0
 1787 003d 06       		.uleb128 0x6
 1788 003e 2E       		.uleb128 0x2e
 1789 003f 01       		.byte	0x1
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 48


 1790 0040 3F       		.uleb128 0x3f
 1791 0041 19       		.uleb128 0x19
 1792 0042 03       		.uleb128 0x3
 1793 0043 0E       		.uleb128 0xe
 1794 0044 3A       		.uleb128 0x3a
 1795 0045 0B       		.uleb128 0xb
 1796 0046 3B       		.uleb128 0x3b
 1797 0047 0B       		.uleb128 0xb
 1798 0048 27       		.uleb128 0x27
 1799 0049 19       		.uleb128 0x19
 1800 004a 11       		.uleb128 0x11
 1801 004b 01       		.uleb128 0x1
 1802 004c 12       		.uleb128 0x12
 1803 004d 06       		.uleb128 0x6
 1804 004e 40       		.uleb128 0x40
 1805 004f 18       		.uleb128 0x18
 1806 0050 9742     		.uleb128 0x2117
 1807 0052 19       		.uleb128 0x19
 1808 0053 01       		.uleb128 0x1
 1809 0054 13       		.uleb128 0x13
 1810 0055 00       		.byte	0
 1811 0056 00       		.byte	0
 1812 0057 07       		.uleb128 0x7
 1813 0058 34       		.uleb128 0x34
 1814 0059 00       		.byte	0
 1815 005a 03       		.uleb128 0x3
 1816 005b 0E       		.uleb128 0xe
 1817 005c 3A       		.uleb128 0x3a
 1818 005d 0B       		.uleb128 0xb
 1819 005e 3B       		.uleb128 0x3b
 1820 005f 0B       		.uleb128 0xb
 1821 0060 49       		.uleb128 0x49
 1822 0061 13       		.uleb128 0x13
 1823 0062 02       		.uleb128 0x2
 1824 0063 17       		.uleb128 0x17
 1825 0064 00       		.byte	0
 1826 0065 00       		.byte	0
 1827 0066 08       		.uleb128 0x8
 1828 0067 34       		.uleb128 0x34
 1829 0068 00       		.byte	0
 1830 0069 03       		.uleb128 0x3
 1831 006a 0E       		.uleb128 0xe
 1832 006b 3A       		.uleb128 0x3a
 1833 006c 0B       		.uleb128 0xb
 1834 006d 3B       		.uleb128 0x3b
 1835 006e 0B       		.uleb128 0xb
 1836 006f 49       		.uleb128 0x49
 1837 0070 13       		.uleb128 0x13
 1838 0071 02       		.uleb128 0x2
 1839 0072 18       		.uleb128 0x18
 1840 0073 00       		.byte	0
 1841 0074 00       		.byte	0
 1842 0075 09       		.uleb128 0x9
 1843 0076 898201   		.uleb128 0x4109
 1844 0079 01       		.byte	0x1
 1845 007a 11       		.uleb128 0x11
 1846 007b 01       		.uleb128 0x1
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 49


 1847 007c 31       		.uleb128 0x31
 1848 007d 13       		.uleb128 0x13
 1849 007e 01       		.uleb128 0x1
 1850 007f 13       		.uleb128 0x13
 1851 0080 00       		.byte	0
 1852 0081 00       		.byte	0
 1853 0082 0A       		.uleb128 0xa
 1854 0083 8A8201   		.uleb128 0x410a
 1855 0086 00       		.byte	0
 1856 0087 02       		.uleb128 0x2
 1857 0088 18       		.uleb128 0x18
 1858 0089 9142     		.uleb128 0x2111
 1859 008b 18       		.uleb128 0x18
 1860 008c 00       		.byte	0
 1861 008d 00       		.byte	0
 1862 008e 0B       		.uleb128 0xb
 1863 008f 898201   		.uleb128 0x4109
 1864 0092 01       		.byte	0x1
 1865 0093 11       		.uleb128 0x11
 1866 0094 01       		.uleb128 0x1
 1867 0095 31       		.uleb128 0x31
 1868 0096 13       		.uleb128 0x13
 1869 0097 00       		.byte	0
 1870 0098 00       		.byte	0
 1871 0099 0C       		.uleb128 0xc
 1872 009a 01       		.uleb128 0x1
 1873 009b 01       		.byte	0x1
 1874 009c 49       		.uleb128 0x49
 1875 009d 13       		.uleb128 0x13
 1876 009e 01       		.uleb128 0x1
 1877 009f 13       		.uleb128 0x13
 1878 00a0 00       		.byte	0
 1879 00a1 00       		.byte	0
 1880 00a2 0D       		.uleb128 0xd
 1881 00a3 21       		.uleb128 0x21
 1882 00a4 00       		.byte	0
 1883 00a5 49       		.uleb128 0x49
 1884 00a6 13       		.uleb128 0x13
 1885 00a7 2F       		.uleb128 0x2f
 1886 00a8 0B       		.uleb128 0xb
 1887 00a9 00       		.byte	0
 1888 00aa 00       		.byte	0
 1889 00ab 0E       		.uleb128 0xe
 1890 00ac 26       		.uleb128 0x26
 1891 00ad 00       		.byte	0
 1892 00ae 49       		.uleb128 0x49
 1893 00af 13       		.uleb128 0x13
 1894 00b0 00       		.byte	0
 1895 00b1 00       		.byte	0
 1896 00b2 0F       		.uleb128 0xf
 1897 00b3 2E       		.uleb128 0x2e
 1898 00b4 01       		.byte	0x1
 1899 00b5 3F       		.uleb128 0x3f
 1900 00b6 19       		.uleb128 0x19
 1901 00b7 03       		.uleb128 0x3
 1902 00b8 0E       		.uleb128 0xe
 1903 00b9 3A       		.uleb128 0x3a
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 50


 1904 00ba 0B       		.uleb128 0xb
 1905 00bb 3B       		.uleb128 0x3b
 1906 00bc 05       		.uleb128 0x5
 1907 00bd 27       		.uleb128 0x27
 1908 00be 19       		.uleb128 0x19
 1909 00bf 11       		.uleb128 0x11
 1910 00c0 01       		.uleb128 0x1
 1911 00c1 12       		.uleb128 0x12
 1912 00c2 06       		.uleb128 0x6
 1913 00c3 40       		.uleb128 0x40
 1914 00c4 18       		.uleb128 0x18
 1915 00c5 9742     		.uleb128 0x2117
 1916 00c7 19       		.uleb128 0x19
 1917 00c8 01       		.uleb128 0x1
 1918 00c9 13       		.uleb128 0x13
 1919 00ca 00       		.byte	0
 1920 00cb 00       		.byte	0
 1921 00cc 10       		.uleb128 0x10
 1922 00cd 898201   		.uleb128 0x4109
 1923 00d0 00       		.byte	0
 1924 00d1 11       		.uleb128 0x11
 1925 00d2 01       		.uleb128 0x1
 1926 00d3 31       		.uleb128 0x31
 1927 00d4 13       		.uleb128 0x13
 1928 00d5 00       		.byte	0
 1929 00d6 00       		.byte	0
 1930 00d7 11       		.uleb128 0x11
 1931 00d8 2E       		.uleb128 0x2e
 1932 00d9 00       		.byte	0
 1933 00da 3F       		.uleb128 0x3f
 1934 00db 19       		.uleb128 0x19
 1935 00dc 03       		.uleb128 0x3
 1936 00dd 0E       		.uleb128 0xe
 1937 00de 3A       		.uleb128 0x3a
 1938 00df 0B       		.uleb128 0xb
 1939 00e0 3B       		.uleb128 0x3b
 1940 00e1 05       		.uleb128 0x5
 1941 00e2 27       		.uleb128 0x27
 1942 00e3 19       		.uleb128 0x19
 1943 00e4 11       		.uleb128 0x11
 1944 00e5 01       		.uleb128 0x1
 1945 00e6 12       		.uleb128 0x12
 1946 00e7 06       		.uleb128 0x6
 1947 00e8 40       		.uleb128 0x40
 1948 00e9 18       		.uleb128 0x18
 1949 00ea 9742     		.uleb128 0x2117
 1950 00ec 19       		.uleb128 0x19
 1951 00ed 00       		.byte	0
 1952 00ee 00       		.byte	0
 1953 00ef 12       		.uleb128 0x12
 1954 00f0 2E       		.uleb128 0x2e
 1955 00f1 01       		.byte	0x1
 1956 00f2 3F       		.uleb128 0x3f
 1957 00f3 19       		.uleb128 0x19
 1958 00f4 03       		.uleb128 0x3
 1959 00f5 0E       		.uleb128 0xe
 1960 00f6 3A       		.uleb128 0x3a
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 51


 1961 00f7 0B       		.uleb128 0xb
 1962 00f8 3B       		.uleb128 0x3b
 1963 00f9 05       		.uleb128 0x5
 1964 00fa 27       		.uleb128 0x27
 1965 00fb 19       		.uleb128 0x19
 1966 00fc 49       		.uleb128 0x49
 1967 00fd 13       		.uleb128 0x13
 1968 00fe 11       		.uleb128 0x11
 1969 00ff 01       		.uleb128 0x1
 1970 0100 12       		.uleb128 0x12
 1971 0101 06       		.uleb128 0x6
 1972 0102 40       		.uleb128 0x40
 1973 0103 18       		.uleb128 0x18
 1974 0104 9742     		.uleb128 0x2117
 1975 0106 19       		.uleb128 0x19
 1976 0107 01       		.uleb128 0x1
 1977 0108 13       		.uleb128 0x13
 1978 0109 00       		.byte	0
 1979 010a 00       		.byte	0
 1980 010b 13       		.uleb128 0x13
 1981 010c 05       		.uleb128 0x5
 1982 010d 00       		.byte	0
 1983 010e 03       		.uleb128 0x3
 1984 010f 0E       		.uleb128 0xe
 1985 0110 3A       		.uleb128 0x3a
 1986 0111 0B       		.uleb128 0xb
 1987 0112 3B       		.uleb128 0x3b
 1988 0113 05       		.uleb128 0x5
 1989 0114 49       		.uleb128 0x49
 1990 0115 13       		.uleb128 0x13
 1991 0116 02       		.uleb128 0x2
 1992 0117 17       		.uleb128 0x17
 1993 0118 00       		.byte	0
 1994 0119 00       		.byte	0
 1995 011a 14       		.uleb128 0x14
 1996 011b 34       		.uleb128 0x34
 1997 011c 00       		.byte	0
 1998 011d 03       		.uleb128 0x3
 1999 011e 0E       		.uleb128 0xe
 2000 011f 3A       		.uleb128 0x3a
 2001 0120 0B       		.uleb128 0xb
 2002 0121 3B       		.uleb128 0x3b
 2003 0122 05       		.uleb128 0x5
 2004 0123 49       		.uleb128 0x49
 2005 0124 13       		.uleb128 0x13
 2006 0125 02       		.uleb128 0x2
 2007 0126 17       		.uleb128 0x17
 2008 0127 00       		.byte	0
 2009 0128 00       		.byte	0
 2010 0129 15       		.uleb128 0x15
 2011 012a 2E       		.uleb128 0x2e
 2012 012b 01       		.byte	0x1
 2013 012c 3F       		.uleb128 0x3f
 2014 012d 19       		.uleb128 0x19
 2015 012e 03       		.uleb128 0x3
 2016 012f 0E       		.uleb128 0xe
 2017 0130 3A       		.uleb128 0x3a
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 52


 2018 0131 0B       		.uleb128 0xb
 2019 0132 3B       		.uleb128 0x3b
 2020 0133 05       		.uleb128 0x5
 2021 0134 27       		.uleb128 0x27
 2022 0135 19       		.uleb128 0x19
 2023 0136 49       		.uleb128 0x49
 2024 0137 13       		.uleb128 0x13
 2025 0138 11       		.uleb128 0x11
 2026 0139 01       		.uleb128 0x1
 2027 013a 12       		.uleb128 0x12
 2028 013b 06       		.uleb128 0x6
 2029 013c 40       		.uleb128 0x40
 2030 013d 18       		.uleb128 0x18
 2031 013e 9642     		.uleb128 0x2116
 2032 0140 19       		.uleb128 0x19
 2033 0141 01       		.uleb128 0x1
 2034 0142 13       		.uleb128 0x13
 2035 0143 00       		.byte	0
 2036 0144 00       		.byte	0
 2037 0145 16       		.uleb128 0x16
 2038 0146 34       		.uleb128 0x34
 2039 0147 00       		.byte	0
 2040 0148 03       		.uleb128 0x3
 2041 0149 0E       		.uleb128 0xe
 2042 014a 3A       		.uleb128 0x3a
 2043 014b 0B       		.uleb128 0xb
 2044 014c 3B       		.uleb128 0x3b
 2045 014d 05       		.uleb128 0x5
 2046 014e 49       		.uleb128 0x49
 2047 014f 13       		.uleb128 0x13
 2048 0150 02       		.uleb128 0x2
 2049 0151 18       		.uleb128 0x18
 2050 0152 00       		.byte	0
 2051 0153 00       		.byte	0
 2052 0154 17       		.uleb128 0x17
 2053 0155 34       		.uleb128 0x34
 2054 0156 00       		.byte	0
 2055 0157 03       		.uleb128 0x3
 2056 0158 0E       		.uleb128 0xe
 2057 0159 3A       		.uleb128 0x3a
 2058 015a 0B       		.uleb128 0xb
 2059 015b 3B       		.uleb128 0x3b
 2060 015c 05       		.uleb128 0x5
 2061 015d 49       		.uleb128 0x49
 2062 015e 13       		.uleb128 0x13
 2063 015f 00       		.byte	0
 2064 0160 00       		.byte	0
 2065 0161 18       		.uleb128 0x18
 2066 0162 34       		.uleb128 0x34
 2067 0163 00       		.byte	0
 2068 0164 03       		.uleb128 0x3
 2069 0165 0E       		.uleb128 0xe
 2070 0166 3A       		.uleb128 0x3a
 2071 0167 0B       		.uleb128 0xb
 2072 0168 3B       		.uleb128 0x3b
 2073 0169 0B       		.uleb128 0xb
 2074 016a 49       		.uleb128 0x49
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 53


 2075 016b 13       		.uleb128 0x13
 2076 016c 3F       		.uleb128 0x3f
 2077 016d 19       		.uleb128 0x19
 2078 016e 02       		.uleb128 0x2
 2079 016f 18       		.uleb128 0x18
 2080 0170 00       		.byte	0
 2081 0171 00       		.byte	0
 2082 0172 19       		.uleb128 0x19
 2083 0173 2E       		.uleb128 0x2e
 2084 0174 00       		.byte	0
 2085 0175 3F       		.uleb128 0x3f
 2086 0176 19       		.uleb128 0x19
 2087 0177 3C       		.uleb128 0x3c
 2088 0178 19       		.uleb128 0x19
 2089 0179 6E       		.uleb128 0x6e
 2090 017a 0E       		.uleb128 0xe
 2091 017b 03       		.uleb128 0x3
 2092 017c 0E       		.uleb128 0xe
 2093 017d 3A       		.uleb128 0x3a
 2094 017e 0B       		.uleb128 0xb
 2095 017f 3B       		.uleb128 0x3b
 2096 0180 0B       		.uleb128 0xb
 2097 0181 00       		.byte	0
 2098 0182 00       		.byte	0
 2099 0183 00       		.byte	0
 2100              		.section	.debug_loc,"",%progbits
 2101              	.Ldebug_loc0:
 2102              	.LLST0:
 2103 0000 7E000000 		.4byte	.LVL5
 2104 0004 82000000 		.4byte	.LVL6
 2105 0008 0200     		.2byte	0x2
 2106 000a 30       		.byte	0x30
 2107 000b 9F       		.byte	0x9f
 2108 000c 82000000 		.4byte	.LVL6
 2109 0010 88010000 		.4byte	.LFE1
 2110 0014 0100     		.2byte	0x1
 2111 0016 52       		.byte	0x52
 2112 0017 00000000 		.4byte	0
 2113 001b 00000000 		.4byte	0
 2114              	.LLST1:
 2115 001f 76000000 		.4byte	.LVL2
 2116 0023 7A000000 		.4byte	.LVL3
 2117 0027 0100     		.2byte	0x1
 2118 0029 50       		.byte	0x50
 2119 002a 7A000000 		.4byte	.LVL3
 2120 002e 7C000000 		.4byte	.LVL4
 2121 0032 0100     		.2byte	0x1
 2122 0034 52       		.byte	0x52
 2123 0035 7C000000 		.4byte	.LVL4
 2124 0039 82000000 		.4byte	.LVL6
 2125 003d 0100     		.2byte	0x1
 2126 003f 53       		.byte	0x53
 2127 0040 8E000000 		.4byte	.LVL7
 2128 0044 A0000000 		.4byte	.LVL9
 2129 0048 0100     		.2byte	0x1
 2130 004a 53       		.byte	0x53
 2131 004b A0000000 		.4byte	.LVL9
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 54


 2132 004f A4000000 		.4byte	.LVL10
 2133 0053 0200     		.2byte	0x2
 2134 0055 71       		.byte	0x71
 2135 0056 00       		.sleb128 0
 2136 0057 A4000000 		.4byte	.LVL10
 2137 005b B0000000 		.4byte	.LVL11
 2138 005f 0700     		.2byte	0x7
 2139 0061 72       		.byte	0x72
 2140 0062 00       		.sleb128 0
 2141 0063 32       		.byte	0x32
 2142 0064 24       		.byte	0x24
 2143 0065 7C       		.byte	0x7c
 2144 0066 00       		.sleb128 0
 2145 0067 22       		.byte	0x22
 2146 0068 B0000000 		.4byte	.LVL11
 2147 006c B4000000 		.4byte	.LVL12
 2148 0070 1500     		.2byte	0x15
 2149 0072 74       		.byte	0x74
 2150 0073 00       		.sleb128 0
 2151 0074 0A       		.byte	0xa
 2152 0075 0037     		.2byte	0x3700
 2153 0077 1A       		.byte	0x1a
 2154 0078 72       		.byte	0x72
 2155 0079 00       		.sleb128 0
 2156 007a 03       		.byte	0x3
 2157 007b 10000000 		.4byte	.LANCHOR0+16
 2158 007f 22       		.byte	0x22
 2159 0080 94       		.byte	0x94
 2160 0081 01       		.byte	0x1
 2161 0082 08       		.byte	0x8
 2162 0083 FF       		.byte	0xff
 2163 0084 1A       		.byte	0x1a
 2164 0085 21       		.byte	0x21
 2165 0086 9F       		.byte	0x9f
 2166 0087 B4000000 		.4byte	.LVL12
 2167 008b BE000000 		.4byte	.LVL13
 2168 008f 1400     		.2byte	0x14
 2169 0091 74       		.byte	0x74
 2170 0092 00       		.sleb128 0
 2171 0093 0A       		.byte	0xa
 2172 0094 0037     		.2byte	0x3700
 2173 0096 1A       		.byte	0x1a
 2174 0097 71       		.byte	0x71
 2175 0098 00       		.sleb128 0
 2176 0099 72       		.byte	0x72
 2177 009a 00       		.sleb128 0
 2178 009b 22       		.byte	0x22
 2179 009c 23       		.byte	0x23
 2180 009d 10       		.uleb128 0x10
 2181 009e 94       		.byte	0x94
 2182 009f 01       		.byte	0x1
 2183 00a0 08       		.byte	0x8
 2184 00a1 FF       		.byte	0xff
 2185 00a2 1A       		.byte	0x1a
 2186 00a3 21       		.byte	0x21
 2187 00a4 9F       		.byte	0x9f
 2188 00a5 BE000000 		.4byte	.LVL13
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 55


 2189 00a9 CE000000 		.4byte	.LVL14
 2190 00ad 1500     		.2byte	0x15
 2191 00af 74       		.byte	0x74
 2192 00b0 00       		.sleb128 0
 2193 00b1 0A       		.byte	0xa
 2194 00b2 0037     		.2byte	0x3700
 2195 00b4 1A       		.byte	0x1a
 2196 00b5 72       		.byte	0x72
 2197 00b6 00       		.sleb128 0
 2198 00b7 03       		.byte	0x3
 2199 00b8 10000000 		.4byte	.LANCHOR0+16
 2200 00bc 22       		.byte	0x22
 2201 00bd 94       		.byte	0x94
 2202 00be 01       		.byte	0x1
 2203 00bf 08       		.byte	0x8
 2204 00c0 FF       		.byte	0xff
 2205 00c1 1A       		.byte	0x1a
 2206 00c2 21       		.byte	0x21
 2207 00c3 9F       		.byte	0x9f
 2208 00c4 CE000000 		.4byte	.LVL14
 2209 00c8 D0000000 		.4byte	.LVL15
 2210 00cc 1400     		.2byte	0x14
 2211 00ce 74       		.byte	0x74
 2212 00cf 00       		.sleb128 0
 2213 00d0 0A       		.byte	0xa
 2214 00d1 0037     		.2byte	0x3700
 2215 00d3 1A       		.byte	0x1a
 2216 00d4 71       		.byte	0x71
 2217 00d5 00       		.sleb128 0
 2218 00d6 72       		.byte	0x72
 2219 00d7 00       		.sleb128 0
 2220 00d8 22       		.byte	0x22
 2221 00d9 23       		.byte	0x23
 2222 00da 10       		.uleb128 0x10
 2223 00db 94       		.byte	0x94
 2224 00dc 01       		.byte	0x1
 2225 00dd 08       		.byte	0x8
 2226 00de FF       		.byte	0xff
 2227 00df 1A       		.byte	0x1a
 2228 00e0 21       		.byte	0x21
 2229 00e1 9F       		.byte	0x9f
 2230 00e2 D0000000 		.4byte	.LVL15
 2231 00e6 E6000000 		.4byte	.LVL17
 2232 00ea 1500     		.2byte	0x15
 2233 00ec 74       		.byte	0x74
 2234 00ed 00       		.sleb128 0
 2235 00ee 0A       		.byte	0xa
 2236 00ef 0037     		.2byte	0x3700
 2237 00f1 1A       		.byte	0x1a
 2238 00f2 72       		.byte	0x72
 2239 00f3 00       		.sleb128 0
 2240 00f4 03       		.byte	0x3
 2241 00f5 10000000 		.4byte	.LANCHOR0+16
 2242 00f9 22       		.byte	0x22
 2243 00fa 94       		.byte	0x94
 2244 00fb 01       		.byte	0x1
 2245 00fc 08       		.byte	0x8
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 56


 2246 00fd FF       		.byte	0xff
 2247 00fe 1A       		.byte	0x1a
 2248 00ff 21       		.byte	0x21
 2249 0100 9F       		.byte	0x9f
 2250 0101 E6000000 		.4byte	.LVL17
 2251 0105 EC000000 		.4byte	.LVL18
 2252 0109 1E00     		.2byte	0x1e
 2253 010b 72       		.byte	0x72
 2254 010c 00       		.sleb128 0
 2255 010d 32       		.byte	0x32
 2256 010e 24       		.byte	0x24
 2257 010f 03       		.byte	0x3
 2258 0110 00000000 		.4byte	.LANCHOR0
 2259 0114 22       		.byte	0x22
 2260 0115 06       		.byte	0x6
 2261 0116 0A       		.byte	0xa
 2262 0117 0037     		.2byte	0x3700
 2263 0119 1A       		.byte	0x1a
 2264 011a 72       		.byte	0x72
 2265 011b 00       		.sleb128 0
 2266 011c 03       		.byte	0x3
 2267 011d 10000000 		.4byte	.LANCHOR0+16
 2268 0121 22       		.byte	0x22
 2269 0122 94       		.byte	0x94
 2270 0123 01       		.byte	0x1
 2271 0124 08       		.byte	0x8
 2272 0125 FF       		.byte	0xff
 2273 0126 1A       		.byte	0x1a
 2274 0127 21       		.byte	0x21
 2275 0128 9F       		.byte	0x9f
 2276 0129 EC000000 		.4byte	.LVL18
 2277 012d F0000000 		.4byte	.LVL19
 2278 0131 1500     		.2byte	0x15
 2279 0133 74       		.byte	0x74
 2280 0134 00       		.sleb128 0
 2281 0135 0A       		.byte	0xa
 2282 0136 0037     		.2byte	0x3700
 2283 0138 1A       		.byte	0x1a
 2284 0139 72       		.byte	0x72
 2285 013a 00       		.sleb128 0
 2286 013b 03       		.byte	0x3
 2287 013c 10000000 		.4byte	.LANCHOR0+16
 2288 0140 22       		.byte	0x22
 2289 0141 94       		.byte	0x94
 2290 0142 01       		.byte	0x1
 2291 0143 08       		.byte	0x8
 2292 0144 FF       		.byte	0xff
 2293 0145 1A       		.byte	0x1a
 2294 0146 21       		.byte	0x21
 2295 0147 9F       		.byte	0x9f
 2296 0148 F0000000 		.4byte	.LVL19
 2297 014c 14010000 		.4byte	.LVL21
 2298 0150 1E00     		.2byte	0x1e
 2299 0152 72       		.byte	0x72
 2300 0153 00       		.sleb128 0
 2301 0154 32       		.byte	0x32
 2302 0155 24       		.byte	0x24
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 57


 2303 0156 03       		.byte	0x3
 2304 0157 00000000 		.4byte	.LANCHOR0
 2305 015b 22       		.byte	0x22
 2306 015c 06       		.byte	0x6
 2307 015d 0A       		.byte	0xa
 2308 015e 0037     		.2byte	0x3700
 2309 0160 1A       		.byte	0x1a
 2310 0161 72       		.byte	0x72
 2311 0162 00       		.sleb128 0
 2312 0163 03       		.byte	0x3
 2313 0164 10000000 		.4byte	.LANCHOR0+16
 2314 0168 22       		.byte	0x22
 2315 0169 94       		.byte	0x94
 2316 016a 01       		.byte	0x1
 2317 016b 08       		.byte	0x8
 2318 016c FF       		.byte	0xff
 2319 016d 1A       		.byte	0x1a
 2320 016e 21       		.byte	0x21
 2321 016f 9F       		.byte	0x9f
 2322 0170 00000000 		.4byte	0
 2323 0174 00000000 		.4byte	0
 2324              	.LLST2:
 2325 0178 DE000000 		.4byte	.LVL16
 2326 017c 0E010000 		.4byte	.LVL20
 2327 0180 0100     		.2byte	0x1
 2328 0182 50       		.byte	0x50
 2329 0183 00000000 		.4byte	0
 2330 0187 00000000 		.4byte	0
 2331              	.LLST3:
 2332 018b 00000000 		.4byte	.LVL25
 2333 018f 06000000 		.4byte	.LVL27
 2334 0193 0100     		.2byte	0x1
 2335 0195 50       		.byte	0x50
 2336 0196 06000000 		.4byte	.LVL27
 2337 019a 1A000000 		.4byte	.LVL29
 2338 019e 0100     		.2byte	0x1
 2339 01a0 52       		.byte	0x52
 2340 01a1 1A000000 		.4byte	.LVL29
 2341 01a5 20000000 		.4byte	.LVL30
 2342 01a9 0400     		.2byte	0x4
 2343 01ab F3       		.byte	0xf3
 2344 01ac 01       		.uleb128 0x1
 2345 01ad 50       		.byte	0x50
 2346 01ae 9F       		.byte	0x9f
 2347 01af 20000000 		.4byte	.LVL30
 2348 01b3 22000000 		.4byte	.LVL31
 2349 01b7 0100     		.2byte	0x1
 2350 01b9 50       		.byte	0x50
 2351 01ba 22000000 		.4byte	.LVL31
 2352 01be 28000000 		.4byte	.LFE6
 2353 01c2 0400     		.2byte	0x4
 2354 01c4 F3       		.byte	0xf3
 2355 01c5 01       		.uleb128 0x1
 2356 01c6 50       		.byte	0x50
 2357 01c7 9F       		.byte	0x9f
 2358 01c8 00000000 		.4byte	0
 2359 01cc 00000000 		.4byte	0
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 58


 2360              	.LLST4:
 2361 01d0 02000000 		.4byte	.LVL26
 2362 01d4 06000000 		.4byte	.LVL27
 2363 01d8 0200     		.2byte	0x2
 2364 01da 30       		.byte	0x30
 2365 01db 9F       		.byte	0x9f
 2366 01dc 0E000000 		.4byte	.LVL28
 2367 01e0 20000000 		.4byte	.LVL30
 2368 01e4 0100     		.2byte	0x1
 2369 01e6 50       		.byte	0x50
 2370 01e7 20000000 		.4byte	.LVL30
 2371 01eb 22000000 		.4byte	.LVL31
 2372 01ef 0200     		.2byte	0x2
 2373 01f1 30       		.byte	0x30
 2374 01f2 9F       		.byte	0x9f
 2375 01f3 22000000 		.4byte	.LVL31
 2376 01f7 28000000 		.4byte	.LFE6
 2377 01fb 0100     		.2byte	0x1
 2378 01fd 50       		.byte	0x50
 2379 01fe 00000000 		.4byte	0
 2380 0202 00000000 		.4byte	0
 2381              	.LLST5:
 2382 0206 00000000 		.4byte	.LVL32
 2383 020a 0A000000 		.4byte	.LVL33
 2384 020e 0100     		.2byte	0x1
 2385 0210 50       		.byte	0x50
 2386 0211 0A000000 		.4byte	.LVL33
 2387 0215 14000000 		.4byte	.LVL35
 2388 0219 0100     		.2byte	0x1
 2389 021b 54       		.byte	0x54
 2390 021c 14000000 		.4byte	.LVL35
 2391 0220 22000000 		.4byte	.LVL37
 2392 0224 0400     		.2byte	0x4
 2393 0226 F3       		.byte	0xf3
 2394 0227 01       		.uleb128 0x1
 2395 0228 50       		.byte	0x50
 2396 0229 9F       		.byte	0x9f
 2397 022a 22000000 		.4byte	.LVL37
 2398 022e 24000000 		.4byte	.LVL38
 2399 0232 0100     		.2byte	0x1
 2400 0234 54       		.byte	0x54
 2401 0235 24000000 		.4byte	.LVL38
 2402 0239 2C000000 		.4byte	.LFE7
 2403 023d 0400     		.2byte	0x4
 2404 023f F3       		.byte	0xf3
 2405 0240 01       		.uleb128 0x1
 2406 0241 50       		.byte	0x50
 2407 0242 9F       		.byte	0x9f
 2408 0243 00000000 		.4byte	0
 2409 0247 00000000 		.4byte	0
 2410              	.LLST6:
 2411 024b 20000000 		.4byte	.LVL36
 2412 024f 22000000 		.4byte	.LVL37
 2413 0253 0100     		.2byte	0x1
 2414 0255 50       		.byte	0x50
 2415 0256 24000000 		.4byte	.LVL38
 2416 025a 26000000 		.4byte	.LVL39
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 59


 2417 025e 0100     		.2byte	0x1
 2418 0260 50       		.byte	0x50
 2419 0261 00000000 		.4byte	0
 2420 0265 00000000 		.4byte	0
 2421              	.LLST7:
 2422 0269 00000000 		.4byte	.LVL40
 2423 026d 04000000 		.4byte	.LVL41
 2424 0271 0100     		.2byte	0x1
 2425 0273 50       		.byte	0x50
 2426 0274 04000000 		.4byte	.LVL41
 2427 0278 10000000 		.4byte	.LFE8
 2428 027c 0400     		.2byte	0x4
 2429 027e F3       		.byte	0xf3
 2430 027f 01       		.uleb128 0x1
 2431 0280 50       		.byte	0x50
 2432 0281 9F       		.byte	0x9f
 2433 0282 00000000 		.4byte	0
 2434 0286 00000000 		.4byte	0
 2435              	.LLST8:
 2436 028a 00000000 		.4byte	.LVL42
 2437 028e 0E000000 		.4byte	.LVL43
 2438 0292 0100     		.2byte	0x1
 2439 0294 50       		.byte	0x50
 2440 0295 0E000000 		.4byte	.LVL43
 2441 0299 1C000000 		.4byte	.LFE9
 2442 029d 0400     		.2byte	0x4
 2443 029f F3       		.byte	0xf3
 2444 02a0 01       		.uleb128 0x1
 2445 02a1 50       		.byte	0x50
 2446 02a2 9F       		.byte	0x9f
 2447 02a3 00000000 		.4byte	0
 2448 02a7 00000000 		.4byte	0
 2449              	.LLST9:
 2450 02ab 00000000 		.4byte	.LVL44
 2451 02af 0E000000 		.4byte	.LVL45
 2452 02b3 0100     		.2byte	0x1
 2453 02b5 50       		.byte	0x50
 2454 02b6 0E000000 		.4byte	.LVL45
 2455 02ba 18000000 		.4byte	.LFE10
 2456 02be 0400     		.2byte	0x4
 2457 02c0 F3       		.byte	0xf3
 2458 02c1 01       		.uleb128 0x1
 2459 02c2 50       		.byte	0x50
 2460 02c3 9F       		.byte	0x9f
 2461 02c4 00000000 		.4byte	0
 2462 02c8 00000000 		.4byte	0
 2463              	.LLST10:
 2464 02cc 00000000 		.4byte	.LVL46
 2465 02d0 04000000 		.4byte	.LVL47
 2466 02d4 0100     		.2byte	0x1
 2467 02d6 50       		.byte	0x50
 2468 02d7 04000000 		.4byte	.LVL47
 2469 02db 10000000 		.4byte	.LFE11
 2470 02df 0400     		.2byte	0x4
 2471 02e1 F3       		.byte	0xf3
 2472 02e2 01       		.uleb128 0x1
 2473 02e3 50       		.byte	0x50
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 60


 2474 02e4 9F       		.byte	0x9f
 2475 02e5 00000000 		.4byte	0
 2476 02e9 00000000 		.4byte	0
 2477              	.LLST11:
 2478 02ed 00000000 		.4byte	.LVL48
 2479 02f1 04000000 		.4byte	.LVL49
 2480 02f5 0100     		.2byte	0x1
 2481 02f7 50       		.byte	0x50
 2482 02f8 04000000 		.4byte	.LVL49
 2483 02fc 10000000 		.4byte	.LFE12
 2484 0300 0400     		.2byte	0x4
 2485 0302 F3       		.byte	0xf3
 2486 0303 01       		.uleb128 0x1
 2487 0304 50       		.byte	0x50
 2488 0305 9F       		.byte	0x9f
 2489 0306 00000000 		.4byte	0
 2490 030a 00000000 		.4byte	0
 2491              	.LLST12:
 2492 030e 00000000 		.4byte	.LVL50
 2493 0312 0C000000 		.4byte	.LVL51
 2494 0316 0100     		.2byte	0x1
 2495 0318 50       		.byte	0x50
 2496 0319 0C000000 		.4byte	.LVL51
 2497 031d 12000000 		.4byte	.LVL53
 2498 0321 0100     		.2byte	0x1
 2499 0323 54       		.byte	0x54
 2500 0324 12000000 		.4byte	.LVL53
 2501 0328 1C000000 		.4byte	.LFE13
 2502 032c 0400     		.2byte	0x4
 2503 032e F3       		.byte	0xf3
 2504 032f 01       		.uleb128 0x1
 2505 0330 50       		.byte	0x50
 2506 0331 9F       		.byte	0x9f
 2507 0332 00000000 		.4byte	0
 2508 0336 00000000 		.4byte	0
 2509              	.LLST13:
 2510 033a 00000000 		.4byte	.LVL50
 2511 033e 0F000000 		.4byte	.LVL52-1
 2512 0342 0100     		.2byte	0x1
 2513 0344 51       		.byte	0x51
 2514 0345 0F000000 		.4byte	.LVL52-1
 2515 0349 1C000000 		.4byte	.LFE13
 2516 034d 0400     		.2byte	0x4
 2517 034f F3       		.byte	0xf3
 2518 0350 01       		.uleb128 0x1
 2519 0351 51       		.byte	0x51
 2520 0352 9F       		.byte	0x9f
 2521 0353 00000000 		.4byte	0
 2522 0357 00000000 		.4byte	0
 2523              	.LLST14:
 2524 035b 00000000 		.4byte	.LVL54
 2525 035f 0C000000 		.4byte	.LVL55
 2526 0363 0100     		.2byte	0x1
 2527 0365 50       		.byte	0x50
 2528 0366 0C000000 		.4byte	.LVL55
 2529 036a 12000000 		.4byte	.LVL57
 2530 036e 0100     		.2byte	0x1
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 61


 2531 0370 54       		.byte	0x54
 2532 0371 12000000 		.4byte	.LVL57
 2533 0375 1C000000 		.4byte	.LFE14
 2534 0379 0400     		.2byte	0x4
 2535 037b F3       		.byte	0xf3
 2536 037c 01       		.uleb128 0x1
 2537 037d 50       		.byte	0x50
 2538 037e 9F       		.byte	0x9f
 2539 037f 00000000 		.4byte	0
 2540 0383 00000000 		.4byte	0
 2541              	.LLST15:
 2542 0387 00000000 		.4byte	.LVL54
 2543 038b 0F000000 		.4byte	.LVL56-1
 2544 038f 0100     		.2byte	0x1
 2545 0391 51       		.byte	0x51
 2546 0392 0F000000 		.4byte	.LVL56-1
 2547 0396 16000000 		.4byte	.LVL58
 2548 039a 0100     		.2byte	0x1
 2549 039c 55       		.byte	0x55
 2550 039d 16000000 		.4byte	.LVL58
 2551 03a1 1C000000 		.4byte	.LFE14
 2552 03a5 0800     		.2byte	0x8
 2553 03a7 F3       		.byte	0xf3
 2554 03a8 01       		.uleb128 0x1
 2555 03a9 50       		.byte	0x50
 2556 03aa 32       		.byte	0x32
 2557 03ab 24       		.byte	0x24
 2558 03ac 73       		.byte	0x73
 2559 03ad 00       		.sleb128 0
 2560 03ae 22       		.byte	0x22
 2561 03af 00000000 		.4byte	0
 2562 03b3 00000000 		.4byte	0
 2563              	.LLST16:
 2564 03b7 00000000 		.4byte	.LVL59
 2565 03bb 0C000000 		.4byte	.LVL60
 2566 03bf 0100     		.2byte	0x1
 2567 03c1 50       		.byte	0x50
 2568 03c2 0C000000 		.4byte	.LVL60
 2569 03c6 44000000 		.4byte	.LVL63
 2570 03ca 0100     		.2byte	0x1
 2571 03cc 54       		.byte	0x54
 2572 03cd 44000000 		.4byte	.LVL63
 2573 03d1 5C000000 		.4byte	.LFE15
 2574 03d5 0400     		.2byte	0x4
 2575 03d7 F3       		.byte	0xf3
 2576 03d8 01       		.uleb128 0x1
 2577 03d9 50       		.byte	0x50
 2578 03da 9F       		.byte	0x9f
 2579 03db 00000000 		.4byte	0
 2580 03df 00000000 		.4byte	0
 2581              	.LLST17:
 2582 03e3 00000000 		.4byte	.LVL59
 2583 03e7 0F000000 		.4byte	.LVL61-1
 2584 03eb 0100     		.2byte	0x1
 2585 03ed 51       		.byte	0x51
 2586 03ee 0F000000 		.4byte	.LVL61-1
 2587 03f2 1C000000 		.4byte	.LVL62
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 62


 2588 03f6 0400     		.2byte	0x4
 2589 03f8 F3       		.byte	0xf3
 2590 03f9 01       		.uleb128 0x1
 2591 03fa 51       		.byte	0x51
 2592 03fb 9F       		.byte	0x9f
 2593 03fc 1C000000 		.4byte	.LVL62
 2594 0400 48000000 		.4byte	.LVL64
 2595 0404 0100     		.2byte	0x1
 2596 0406 51       		.byte	0x51
 2597 0407 00000000 		.4byte	0
 2598 040b 00000000 		.4byte	0
 2599              	.LLST18:
 2600 040f 00000000 		.4byte	.LVL67
 2601 0413 0C000000 		.4byte	.LVL68
 2602 0417 0100     		.2byte	0x1
 2603 0419 50       		.byte	0x50
 2604 041a 0C000000 		.4byte	.LVL68
 2605 041e 28000000 		.4byte	.LVL72
 2606 0422 0100     		.2byte	0x1
 2607 0424 55       		.byte	0x55
 2608 0425 28000000 		.4byte	.LVL72
 2609 0429 40000000 		.4byte	.LFE16
 2610 042d 0400     		.2byte	0x4
 2611 042f F3       		.byte	0xf3
 2612 0430 01       		.uleb128 0x1
 2613 0431 50       		.byte	0x50
 2614 0432 9F       		.byte	0x9f
 2615 0433 00000000 		.4byte	0
 2616 0437 00000000 		.4byte	0
 2617              	.LLST19:
 2618 043b 00000000 		.4byte	.LVL67
 2619 043f 0F000000 		.4byte	.LVL69-1
 2620 0443 0100     		.2byte	0x1
 2621 0445 51       		.byte	0x51
 2622 0446 0F000000 		.4byte	.LVL69-1
 2623 044a 1C000000 		.4byte	.LVL70
 2624 044e 0400     		.2byte	0x4
 2625 0450 F3       		.byte	0xf3
 2626 0451 01       		.uleb128 0x1
 2627 0452 51       		.byte	0x51
 2628 0453 9F       		.byte	0x9f
 2629 0454 1C000000 		.4byte	.LVL70
 2630 0458 25000000 		.4byte	.LVL71-1
 2631 045c 0100     		.2byte	0x1
 2632 045e 50       		.byte	0x50
 2633 045f 00000000 		.4byte	0
 2634 0463 00000000 		.4byte	0
 2635              	.LLST20:
 2636 0467 00000000 		.4byte	.LVL74
 2637 046b 0C000000 		.4byte	.LVL75
 2638 046f 0100     		.2byte	0x1
 2639 0471 50       		.byte	0x50
 2640 0472 0C000000 		.4byte	.LVL75
 2641 0476 2A000000 		.4byte	.LVL80
 2642 047a 0100     		.2byte	0x1
 2643 047c 54       		.byte	0x54
 2644 047d 2A000000 		.4byte	.LVL80
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 63


 2645 0481 48000000 		.4byte	.LFE17
 2646 0485 0400     		.2byte	0x4
 2647 0487 F3       		.byte	0xf3
 2648 0488 01       		.uleb128 0x1
 2649 0489 50       		.byte	0x50
 2650 048a 9F       		.byte	0x9f
 2651 048b 00000000 		.4byte	0
 2652 048f 00000000 		.4byte	0
 2653              	.LLST21:
 2654 0493 00000000 		.4byte	.LVL74
 2655 0497 0F000000 		.4byte	.LVL76-1
 2656 049b 0100     		.2byte	0x1
 2657 049d 51       		.byte	0x51
 2658 049e 0F000000 		.4byte	.LVL76-1
 2659 04a2 1C000000 		.4byte	.LVL77
 2660 04a6 0400     		.2byte	0x4
 2661 04a8 F3       		.byte	0xf3
 2662 04a9 01       		.uleb128 0x1
 2663 04aa 51       		.byte	0x51
 2664 04ab 9F       		.byte	0x9f
 2665 04ac 1C000000 		.4byte	.LVL77
 2666 04b0 1F000000 		.4byte	.LVL78-1
 2667 04b4 0100     		.2byte	0x1
 2668 04b6 50       		.byte	0x50
 2669 04b7 00000000 		.4byte	0
 2670 04bb 00000000 		.4byte	0
 2671              		.section	.debug_aranges,"",%progbits
 2672 0000 A4000000 		.4byte	0xa4
 2673 0004 0200     		.2byte	0x2
 2674 0006 00000000 		.4byte	.Ldebug_info0
 2675 000a 04       		.byte	0x4
 2676 000b 00       		.byte	0
 2677 000c 0000     		.2byte	0
 2678 000e 0000     		.2byte	0
 2679 0010 00000000 		.4byte	.LFB1
 2680 0014 88010000 		.4byte	.LFE1-.LFB1
 2681 0018 00000000 		.4byte	.LFB2
 2682 001c 24000000 		.4byte	.LFE2-.LFB2
 2683 0020 00000000 		.4byte	.LFB0
 2684 0024 20000000 		.4byte	.LFE0-.LFB0
 2685 0028 00000000 		.4byte	.LFB3
 2686 002c 10000000 		.4byte	.LFE3-.LFB3
 2687 0030 00000000 		.4byte	.LFB4
 2688 0034 14000000 		.4byte	.LFE4-.LFB4
 2689 0038 00000000 		.4byte	.LFB5
 2690 003c 14000000 		.4byte	.LFE5-.LFB5
 2691 0040 00000000 		.4byte	.LFB6
 2692 0044 28000000 		.4byte	.LFE6-.LFB6
 2693 0048 00000000 		.4byte	.LFB7
 2694 004c 2C000000 		.4byte	.LFE7-.LFB7
 2695 0050 00000000 		.4byte	.LFB8
 2696 0054 10000000 		.4byte	.LFE8-.LFB8
 2697 0058 00000000 		.4byte	.LFB9
 2698 005c 1C000000 		.4byte	.LFE9-.LFB9
 2699 0060 00000000 		.4byte	.LFB10
 2700 0064 18000000 		.4byte	.LFE10-.LFB10
 2701 0068 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 64


 2702 006c 10000000 		.4byte	.LFE11-.LFB11
 2703 0070 00000000 		.4byte	.LFB12
 2704 0074 10000000 		.4byte	.LFE12-.LFB12
 2705 0078 00000000 		.4byte	.LFB13
 2706 007c 1C000000 		.4byte	.LFE13-.LFB13
 2707 0080 00000000 		.4byte	.LFB14
 2708 0084 1C000000 		.4byte	.LFE14-.LFB14
 2709 0088 00000000 		.4byte	.LFB15
 2710 008c 5C000000 		.4byte	.LFE15-.LFB15
 2711 0090 00000000 		.4byte	.LFB16
 2712 0094 40000000 		.4byte	.LFE16-.LFB16
 2713 0098 00000000 		.4byte	.LFB17
 2714 009c 48000000 		.4byte	.LFE17-.LFB17
 2715 00a0 00000000 		.4byte	0
 2716 00a4 00000000 		.4byte	0
 2717              		.section	.debug_ranges,"",%progbits
 2718              	.Ldebug_ranges0:
 2719 0000 00000000 		.4byte	.LFB1
 2720 0004 88010000 		.4byte	.LFE1
 2721 0008 00000000 		.4byte	.LFB2
 2722 000c 24000000 		.4byte	.LFE2
 2723 0010 00000000 		.4byte	.LFB0
 2724 0014 20000000 		.4byte	.LFE0
 2725 0018 00000000 		.4byte	.LFB3
 2726 001c 10000000 		.4byte	.LFE3
 2727 0020 00000000 		.4byte	.LFB4
 2728 0024 14000000 		.4byte	.LFE4
 2729 0028 00000000 		.4byte	.LFB5
 2730 002c 14000000 		.4byte	.LFE5
 2731 0030 00000000 		.4byte	.LFB6
 2732 0034 28000000 		.4byte	.LFE6
 2733 0038 00000000 		.4byte	.LFB7
 2734 003c 2C000000 		.4byte	.LFE7
 2735 0040 00000000 		.4byte	.LFB8
 2736 0044 10000000 		.4byte	.LFE8
 2737 0048 00000000 		.4byte	.LFB9
 2738 004c 1C000000 		.4byte	.LFE9
 2739 0050 00000000 		.4byte	.LFB10
 2740 0054 18000000 		.4byte	.LFE10
 2741 0058 00000000 		.4byte	.LFB11
 2742 005c 10000000 		.4byte	.LFE11
 2743 0060 00000000 		.4byte	.LFB12
 2744 0064 10000000 		.4byte	.LFE12
 2745 0068 00000000 		.4byte	.LFB13
 2746 006c 1C000000 		.4byte	.LFE13
 2747 0070 00000000 		.4byte	.LFB14
 2748 0074 1C000000 		.4byte	.LFE14
 2749 0078 00000000 		.4byte	.LFB15
 2750 007c 5C000000 		.4byte	.LFE15
 2751 0080 00000000 		.4byte	.LFB16
 2752 0084 40000000 		.4byte	.LFE16
 2753 0088 00000000 		.4byte	.LFB17
 2754 008c 48000000 		.4byte	.LFE17
 2755 0090 00000000 		.4byte	0
 2756 0094 00000000 		.4byte	0
 2757              		.section	.debug_line,"",%progbits
 2758              	.Ldebug_line0:
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 65


 2759 0000 95020000 		.section	.debug_str,"MS",%progbits,1
 2759      02004B00 
 2759      00000201 
 2759      FB0E0D00 
 2759      01010101 
 2760              	.LASF10:
 2761 0000 75696E74 		.ascii	"uint16\000"
 2761      313600
 2762              	.LASF49:
 2763 0007 61646347 		.ascii	"adcGain\000"
 2763      61696E00 
 2764              	.LASF24:
 2765 000f 636F756E 		.ascii	"counts\000"
 2765      747300
 2766              	.LASF54:
 2767 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2767      436F756E 
 2767      7473546F 
 2767      5F566F6C 
 2767      747300
 2768              	.LASF26:
 2769 0029 4144435F 		.ascii	"ADC_Init\000"
 2769      496E6974 
 2769      00
 2770              	.LASF64:
 2771 0032 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2771      43313120 
 2771      352E342E 
 2771      31203230 
 2771      31363036 
 2772 0065 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2772      20726576 
 2772      6973696F 
 2772      6E203233 
 2772      37373135 
 2773 0098 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2773      66756E63 
 2773      74696F6E 
 2773      2D736563 
 2773      74696F6E 
 2774              	.LASF7:
 2775 00c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2775      206C6F6E 
 2775      6720756E 
 2775      7369676E 
 2775      65642069 
 2776              	.LASF25:
 2777 00d7 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2777      496E7075 
 2777      7473506C 
 2777      6163656D 
 2777      656E7400 
 2778              	.LASF30:
 2779 00eb 4144435F 		.ascii	"ADC_StartConvert\000"
 2779      53746172 
 2779      74436F6E 
 2779      76657274 
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 66


 2779      00
 2780              	.LASF6:
 2781 00fc 6C6F6E67 		.ascii	"long long int\000"
 2781      206C6F6E 
 2781      6720696E 
 2781      7400
 2782              	.LASF0:
 2783 010a 7369676E 		.ascii	"signed char\000"
 2783      65642063 
 2783      68617200 
 2784              	.LASF32:
 2785 0116 73746174 		.ascii	"status\000"
 2785      757300
 2786              	.LASF13:
 2787 011d 696E7433 		.ascii	"int32\000"
 2787      3200
 2788              	.LASF28:
 2789 0123 4144435F 		.ascii	"ADC_Start\000"
 2789      53746172 
 2789      7400
 2790              	.LASF4:
 2791 012d 6C6F6E67 		.ascii	"long int\000"
 2791      20696E74 
 2791      00
 2792              	.LASF53:
 2793 0136 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2793      436F756E 
 2793      7473546F 
 2793      5F75566F 
 2793      6C747300 
 2794              	.LASF59:
 2795 014a 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2795      636F756E 
 2795      74735065 
 2795      72313056 
 2795      6F6C7400 
 2796              	.LASF9:
 2797 015e 75696E74 		.ascii	"uint8\000"
 2797      3800
 2798              	.LASF62:
 2799 0164 43794465 		.ascii	"CyDelayUs\000"
 2799      6C617955 
 2799      7300
 2800              	.LASF16:
 2801 016e 646F7562 		.ascii	"double\000"
 2801      6C6500
 2802              	.LASF11:
 2803 0175 75696E74 		.ascii	"uint32\000"
 2803      333200
 2804              	.LASF39:
 2805 017c 6D61736B 		.ascii	"mask\000"
 2805      00
 2806              	.LASF57:
 2807 0181 4144435F 		.ascii	"ADC_initVar\000"
 2807      696E6974 
 2807      56617200 
 2808              	.LASF35:
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 67


 2809 018d 7265744D 		.ascii	"retMode\000"
 2809      6F646500 
 2810              	.LASF44:
 2811 0195 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2811      5365744C 
 2811      696D6974 
 2811      4D61736B 
 2811      00
 2812              	.LASF8:
 2813 01a6 756E7369 		.ascii	"unsigned int\000"
 2813      676E6564 
 2813      20696E74 
 2813      00
 2814              	.LASF67:
 2815 01b3 75566F6C 		.ascii	"uVolts\000"
 2815      747300
 2816              	.LASF5:
 2817 01ba 6C6F6E67 		.ascii	"long unsigned int\000"
 2817      20756E73 
 2817      69676E65 
 2817      6420696E 
 2817      7400
 2818              	.LASF45:
 2819 01cc 4144435F 		.ascii	"ADC_SetSatMask\000"
 2819      53657453 
 2819      61744D61 
 2819      736B00
 2820              	.LASF55:
 2821 01db 766F6C74 		.ascii	"volts\000"
 2821      7300
 2822              	.LASF23:
 2823 01e1 746D7052 		.ascii	"tmpRegVal\000"
 2823      65675661 
 2823      6C00
 2824              	.LASF3:
 2825 01eb 73686F72 		.ascii	"short unsigned int\000"
 2825      7420756E 
 2825      7369676E 
 2825      65642069 
 2825      6E7400
 2826              	.LASF61:
 2827 01fe 4379496E 		.ascii	"CyIntSetVector\000"
 2827      74536574 
 2827      56656374 
 2827      6F7200
 2828              	.LASF31:
 2829 020d 4144435F 		.ascii	"ADC_StopConvert\000"
 2829      53746F70 
 2829      436F6E76 
 2829      65727400 
 2830              	.LASF66:
 2831 021d 433A5C55 		.ascii	"C:\\Users\\boise\\Documents\\PSoC Creator\\VoltMete"
 2831      73657273 
 2831      5C626F69 
 2831      73655C44 
 2831      6F63756D 
 2832 024b 725C4361 		.ascii	"r\\CarVolt1.cydsn\000"
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 68


 2832      72566F6C 
 2832      74312E63 
 2832      7964736E 
 2832      00
 2833              	.LASF52:
 2834 025c 6D566F6C 		.ascii	"mVolts\000"
 2834      747300
 2835              	.LASF19:
 2836 0263 72656733 		.ascii	"reg32\000"
 2836      3200
 2837              	.LASF14:
 2838 0269 666C6F61 		.ascii	"float32\000"
 2838      74333200 
 2839              	.LASF21:
 2840 0271 73697A65 		.ascii	"sizetype\000"
 2840      74797065 
 2840      00
 2841              	.LASF41:
 2842 027a 6C6F774C 		.ascii	"lowLimit\000"
 2842      696D6974 
 2842      00
 2843              	.LASF20:
 2844 0283 6C6F6E67 		.ascii	"long double\000"
 2844      20646F75 
 2844      626C6500 
 2845              	.LASF42:
 2846 028f 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2846      53657448 
 2846      6967684C 
 2846      696D6974 
 2846      00
 2847              	.LASF33:
 2848 02a0 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2848      4973456E 
 2848      64436F6E 
 2848      76657273 
 2848      696F6E00 
 2849              	.LASF17:
 2850 02b4 696E7436 		.ascii	"int64\000"
 2850      3400
 2851              	.LASF60:
 2852 02ba 4379496E 		.ascii	"CyIntSetPriority\000"
 2852      74536574 
 2852      5072696F 
 2852      72697479 
 2852      00
 2853              	.LASF38:
 2854 02cb 4144435F 		.ascii	"ADC_SetChanMask\000"
 2854      53657443 
 2854      68616E4D 
 2854      61736B00 
 2855              	.LASF65:
 2856 02db 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2856      72617465 
 2856      645F536F 
 2856      75726365 
 2856      5C50536F 
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 69


 2857              	.LASF48:
 2858 02f8 4144435F 		.ascii	"ADC_SetGain\000"
 2858      53657447 
 2858      61696E00 
 2859              	.LASF15:
 2860 0304 666C6F61 		.ascii	"float\000"
 2860      7400
 2861              	.LASF43:
 2862 030a 68696768 		.ascii	"highLimit\000"
 2862      4C696D69 
 2862      7400
 2863              	.LASF50:
 2864 0314 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2864      436F756E 
 2864      7473546F 
 2864      5F6D566F 
 2864      6C747300 
 2865              	.LASF40:
 2866 0328 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2866      5365744C 
 2866      6F774C69 
 2866      6D697400 
 2867              	.LASF63:
 2868 0338 43794861 		.ascii	"CyHalt\000"
 2868      6C7400
 2869              	.LASF1:
 2870 033f 756E7369 		.ascii	"unsigned char\000"
 2870      676E6564 
 2870      20636861 
 2870      7200
 2871              	.LASF58:
 2872 034d 4144435F 		.ascii	"ADC_offset\000"
 2872      6F666673 
 2872      657400
 2873              	.LASF2:
 2874 0358 73686F72 		.ascii	"short int\000"
 2874      7420696E 
 2874      7400
 2875              	.LASF29:
 2876 0362 4144435F 		.ascii	"ADC_Stop\000"
 2876      53746F70 
 2876      00
 2877              	.LASF22:
 2878 036b 63684E75 		.ascii	"chNum\000"
 2878      6D00
 2879              	.LASF36:
 2880 0371 6368616E 		.ascii	"chan\000"
 2880      00
 2881              	.LASF18:
 2882 0376 63686172 		.ascii	"char\000"
 2882      00
 2883              	.LASF56:
 2884 037b 4144435F 		.ascii	"ADC_channelsConfig\000"
 2884      6368616E 
 2884      6E656C73 
 2884      436F6E66 
 2884      696700
ARM GAS  C:\Users\boise\AppData\Local\Temp\cckXNObL.s 			page 70


 2885              	.LASF47:
 2886 038e 6F666673 		.ascii	"offset\000"
 2886      657400
 2887              	.LASF51:
 2888 0395 61646343 		.ascii	"adcCounts\000"
 2888      6F756E74 
 2888      7300
 2889              	.LASF27:
 2890 039f 4144435F 		.ascii	"ADC_Enable\000"
 2890      456E6162 
 2890      6C6500
 2891              	.LASF12:
 2892 03aa 696E7431 		.ascii	"int16\000"
 2892      3600
 2893              	.LASF46:
 2894 03b0 4144435F 		.ascii	"ADC_SetOffset\000"
 2894      5365744F 
 2894      66667365 
 2894      7400
 2895              	.LASF37:
 2896 03be 72657375 		.ascii	"result\000"
 2896      6C7400
 2897              	.LASF34:
 2898 03c5 4144435F 		.ascii	"ADC_GetResult16\000"
 2898      47657452 
 2898      6573756C 
 2898      74313600 
 2899              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
